@SET_MAKE@
EMACS=@EMACS@
ICONFORM=@ICONFORM@
ELCC=$(EMACS) -batch -q -no-site-file -no-init-file --eval '(setq load-path (cons "." load-path))' $(ICONFORM)
AUCTEX=-eval '(let ((dir (pop command-line-args-left))) \
  (if (not (string-equal dir "")) (push dir load-path)))' $(AUCTEXDIR)
AUTOLOAD=--eval '(let ((generated-autoload-file (expand-file-name "$@"))) \
		(update-file-autoloads "preview.el")(save-buffers-kill-emacs t))'
GS=@GS@

LISP_SOURCES = @PLAT_LISP@ preview.el
LISP_OBJS = $(LISP_SOURCES:.el=.elc)

ICON_XPM_SOURCES = images/prevwork.xpm images/preview.xpm images/preverr.xpm
ICON_XBM_SOURCES = $(ICON_XPM_SOURCES:.xpm=.xbm)
ICON_SOURCES = $(ICON_XPM_SOURCES) $(ICON_XBM_SOURCES) \
	images/preview-cap-up.xpm

prefix = @prefix@#
lispdir = @lispdir@#
loadlispdir = @lispdir@#
icondir = @icondir@#
datadir = @datadir@#
packagedir = @packagedir@#
AUCTEXDIR = @AUCTEXDIR@#

INSTALL = @INSTALL@#
INSTALL_DATA = @INSTALL_DATA@#
MKINSTALLDIRS = ./mkinstalldirs

all: texmf elisp docs install-hint

elisp: $(LISP_OBJS) preview-latex.el

texmf: 
	(cd latex ; $(MAKE) all)

docs:
	(cd doc ; $(MAKE) all)

install-hint:
	@echo 'Congratulations!  Build is complete.'
	@echo 
	@echo 'Now, run "make install" as root, or whatever user has permissions'
	@echo 'to write to the install directory.'

install: install-texmf install-el install-icons install-docs use-hint

install-docs:
	(cd doc ; $(MAKE) install)

use-hint:
	@echo "Installation completed."
	@echo
	@echo "Please read the PROBLEMS file if you use"
	@echo "a) AucTeX with a version less than 11.0"
	@echo "b) GNU Emacs with a version less than 21.2"
	@echo "   OR XEmacs with a version less than 21.4.9"
	@echo "c) GhostScript with a version less than 6.51"
	@echo "Please use M-x preview-report-bug if you experience any"
	@echo "problems not mentioned in there."

install-el: $(LISP_OBJS)
	-$(MKINSTALLDIRS) $(lispdir)
	for x in $(LISP_SOURCES) ; do \
	  echo ' $(INSTALL_DATA)' $$x '$(lispdir)' ; \
	  $(INSTALL_DATA) $$x '$(lispdir)' ; \
	  echo ' $(INSTALL_DATA)' $${x}c '$(lispdir)' ; \
	  $(INSTALL_DATA) $${x}c '$(lispdir)' ; \
	done
	$(ELCC) -l prv-install -f preview-make-package $(packagedir) $(LISP_SOURCES)

install-icons: $(ICON_SOURCES)
	-$(MKINSTALLDIRS) $(icondir)
	for x in $(ICON_SOURCES); do \
	  echo ' $(INSTALL_DATA)' $$x '$(icondir)' ; \
	  $(INSTALL_DATA) $$x '$(icondir)' ; \
	done

install-texmf:
	(cd latex ; $(MAKE) install)

$(LISP_OBJS):	$(LISP_SOURCES)
	for x in $(LISP_SOURCES) ; do \
	  echo $(ELCC) $(AUCTEX) -f batch-byte-compile $$x ; \
	  $(ELCC) $(AUCTEX) -f batch-byte-compile $$x ; \
	done

preview-latex.el: preview.el
	rm -f preview-latex.el
	-$(EMACS) -batch -no-site-file -no-init-file $(AUTOLOAD) ; \
	if test ! -r $@; then \
	echo ";; Auto-generated preview-latex.el" > $@ ; \
	echo "" >> $@ ; \
	$(EMACS) -batch -no-site-file -no-init-file $(AUTOLOAD) ; \
	fi
	if test $(GS) != "gs"; then \
	  $(ELCC) --eval '(prin1 `(setq preview-gs-command ,(pop command-line-args-left)))' $(GS) >> $@ ; \
	fi
	$(ELCC) --eval '(prin1 `(add-to-list '\''load-path ,(pop command-line-args-left)))' $(loadlispdir) >> $@

clean:
	rm -f *.elc *~ *.aux *.dvi *.log latex.out testdocstrip.tex \
	   preview-latex.el
	rm -rf *.prv 
	(cd doc ; $(MAKE) clean)
	(cd latex ; $(MAKE) clean)

distclean:
	make clean
	rm -f config.log config.cache config.status
	rm -f Makefile */Makefile
