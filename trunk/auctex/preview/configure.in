dnl This diversion attempts to save the locale variables
dnl before configure overwrites them.  It's needed for the 
dnl 8-bit LaTeX test below.  Diversion 1 is sure to be right on top.

AC_DIVERT_PUSH(1)dnl
# >> A brief intermission for a short diversion from      <<
# >> our multinational entertainment and correction group <<
if test -z "$MY_LANG$MY_LC_CTYPE$MY_LANGUAGE$MY_LC_ALL"; then
  for x in LANG LC_CTYPE LANGUAGE LC_ALL
  do
    eval 'if test -n "$'$x'"; then MY_'$x'=$'$x'; export MY_'$x'; fi'
  done
fi
# >> Thank you for your patience.  You may now resume     <<
# >> perusing the rest of your configure script.          <<
AC_DIVERT_POP dnl
dnl
dnl Now we use the old AC_INIT macro for versions 2.0 to 2.19.  That
dnl should make the proper split between 2.13 and 2.49a.
dnl
ifelse(regexp(AC_ACVERSION,[^2\.[01][0-9]?[^0-9]*$]),-1,
  [AC_INIT(preview-latex,0.7.9,preview-latex-bugs@lists.sourceforge.net)],
  [AC_INIT(preview.el)])

AC_SET_MAKE
AC_PROG_INSTALL
EMACS_PROG_EMACS

packagedir=
if test $EMACS_FLAVOR = "xemacs"  ; then
   PLAT_LISP=prv-xemacs.el
   EMACS_PATH_PACKAGEDIR([preview])
   ICONFORM="--eval '(setq data-directory-list (cons \"images\" data-directory-list))'"
   lispdir='${packagedir}/lisp/preview'
   icondir='${packagedir}/etc/preview'
   infodir='${packagedir}/info'
else
   PLAT_LISP=prv-emacs.el
   AC_MSG_CHECKING([if $EMACS supports images])
   EMACS_LISP(EMACS_cv_SYS_emacs21, [(unless (and (boundp 'image-types) image-types)
		 (error \"This Emacs does not support images\"))], "noecho")
   if test "${EMACS_cv_SYS_emacs21}" != "nil"; then
      AC_MSG_ERROR("You need an Emacs that supports images")
   else
      AC_MSG_RESULT([yes])
   fi
   
   EMACS_PATH_LISPDIR([preview],[preview])
   ICONFORM= # TODO: fill this in
   icondir='${lispdir}'
fi

AC_SUBST(PLAT_LISP)
AC_SUBST(ICONFORM)
AC_SUBST(packagedir)
AC_SUBST(icondir)

EMACS_CHECK_AUCTEX
AC_SUBST(auctexdir)

AC_CHECK_PROGS_REQUIRED(GS, gs GSWIN32C.EXE GSWIN32.EXE, 
[GhostScript not found!  Aborting!  
You need GhostScript in your PATH for preview to work.])

dnl check to see if GS supports -dTextAlphaBits and -dGraphicsAlphaBits
dnl Check to see if specific drivers are built in.
dnl Need table of mappings, with priority

AC_PATH_PROG_REQUIRED(LATEX, latex, [LaTeX not found, aborting!
You must install LaTeX for preview to work.])

AC_ARG_ENABLE(8bit-test,
   [  --disable-8bit-test            Disable LaTeX 8-bit test], 
   [ if test "$enableval" = no ; then ENABLE8BIT=false ; 
     else ENABLE8BIT=true ; fi  ], [ ENABLE8BIT=true ])
if test "$ENABLE8BIT"x = truex ; then
    AC_MSG_CHECKING([if LaTeX is installed 8-bit clean])
# Restore the locale variables saved on startup
  (
# Use a subshell
  for x in LANG LC_CTYPE LANGUAGE LC_ALL
  do
    eval 'if test -n "$MY_'$x'"; then '$x'=$MY_'$x'; export '$x'; else unset '$x'; fi'
  done
    
  if "$LATEX" '\nonstopmode\message{^^fc!}' 2>&1 | tee latex.out | grep 'fc!$' >/dev/null 2>/dev/null
  then
    AC_MSG_ERROR([LaTeX is not installed 8-bit clean!  
Check the PROBLEMS file for details.])
  else
    AC_MSG_RESULT(yes)
  fi
    ) || exit $?
fi

# Determine which latex-style components to install
# To match .sty, .def, .cfg, but _not_ .drv
TEXMFGEN=[`sed -n 's/^%<installer>.*file[{]\\([^}.]*\\.[sdc][tef][yfg]\\)[}].*/\\1/p' latex/preview.dtx`]
# Replace newlines with spaces.
TEXMFGEN=`echo $TEXMFGEN`
AC_SUBST(TEXMFGEN)

AC_PATH_PROG_REQUIRED(TEX, tex, NONE)

# Be very careful about assuming things about the available hash programs
# MikTeX comes with a braindead link to mktexlsr, apparently, so first
# try the regular utility from them.
AC_PATH_PROG(TEXHASH, texhash)
if test -z "$TEXHASH"; then
  AC_CHECK_PROG(TEXHASH, initexmf, initexmf -u)
  if test -z "$TEXHASH"; then
    AC_PATH_PROGS(TEXHASH, mktexlsr MakeTeXls-R, :)
  fi
fi

TEX_PATH_TEXMFDIR

AC_PATH_PROG(MAKEINFO, makeinfo, :)
MAKEINFO_CHECK_MACROS(acronym env option)
AC_PATH_PROG(INSTALL_INFO, install-info, :, $PATH /usr/sbin /sbin)

AC_SHELL_QUOTIFY(texmfdir)
AC_SHELL_QUOTIFY(prefix)
AC_SHELL_QUOTIFY(previewtexmfdir)
AC_SHELL_QUOTIFY(previewdocdir)
AC_SHELL_QUOTIFY(packagedir)
AC_SHELL_QUOTIFY(lispdir)
AC_SHELL_QUOTIFY(icondir)
AC_SHELL_QUOTIFY(infodir)
AC_SHELL_QUOTIFY(auctexdir)
AC_SHELL_QUOTIFY(datadir)
AC_SHELL_QUOTIFY(TEXHASH)
AC_SHELL_QUOTIFY(EMACS)
AC_SHELL_QUOTIFY(INSTALL_INFO)
AC_SHELL_QUOTIFY(MAKEINFO)
AC_SHELL_QUOTIFY(TEX)
AC_SHELL_QUOTIFY(LATEX)

AC_OUTPUT(Makefile doc/Makefile latex/Makefile)
cat >&2 <<EOF

Congratulations!  Configuration is complete.

Type "make" at the prompt to build preview.
EOF
