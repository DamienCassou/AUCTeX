@ifset rawfile
@include macros.texi
@node  Frequently Asked Questions About preview-latex, Introduction to FAQ
@top Frequently Asked Questions about @previewlatex{}

@raisesections
@contents
@end ifset

@ifclear rawfile
@menu
* Introduction to FAQ::         
* Requirements::                
* Installation Trouble::        
* Customization::               
@end menu
@end ifclear

@node Introduction to FAQ, Requirements, Frequently Asked Questions, Frequently Asked Questions
@section Introduction

@subsection How can I contribute to the FAQ?

Send an email with the subject:
@example
Preview FAQ
@end example
to @email{oub@@eucmos.sim.ucm.es, Uwe Brauer}.

@node Requirements, Installation Trouble, Introduction to FAQ, Frequently Asked Questions
@section Requirements

@subsection Which version of (X)Emacs is needed?
See also the table at the end of the section.

@previewlatex{} requires explicitely @w{GNU Emacs} with a version of at
least 21.1. Concerning XEmacs, it is reported that it works for versions
starting with 21.1.14 (with and without Mule). It is not expected to
work with any with any version prior to this.  The operation of
versions before 21.4.9 suffers from some `cosmetic' problems:

@subsection Display Problem in XEmacs

Vertical constructs such as superscripts are not displayed correctly
in XEmacs. This is a known bug of the XEmacs display engine and
supposed to be solved in version 21.4.9 for the X Window System
version.  For @w{MS Windows}, this bug has been fixed in 21.4.8.

@subsection Which versions of GhostScript and @AUCTeX{} are needed?

We recommend to use GNU or AFPL GhostScript with a version of at least
6.51.  Versions above 7.xx have better antialiasing.

We also recommend strongly to use @AUCTeX{}-11.11. Versions prior to
that may work but are known to cause problems with multiple directories,
as well as with detection of text locations for previews generated by
partial @TeX{} compilations.  The latter problem can be patched for
version 10.0g, see the @file{patches} directory of the @previewlatex{}
distribution.

@subsection I have trouble with the display format...
We recommend keeping the variable @code{preview-image-type} set to
@code{png}.  This is the default and can be set via the
Preview/Customize menu.

All other formats are known to have inconveniences, either in file size
or quality.  There are some Emacs versions around not supporting
@acronym{PNG}, the proper idea to deal with that is to complain to your
Emacs providers.  Short of that, checking out @acronym{PNM} or
@acronym{JPEG} formats might be a good way to find out whether the lack
of @acronym{PNG} format support might be the only problem with your
Emacs.

@subsection For which OS does preview work?

It is known to work under the X Window System for Linux and for several
flavors of Unix: we have reports for HP and Solaris.

It works for Win9x under the cygwin version of XEmacs; however it is
very slow! According to recent reports, it should also work for the
native port, starting with preview-latex 0.7.3.  It currently does not
work for the GNU Emacs port to Win9x because of a lack of image support
in currently released GNU Emacs versions under Win9x.

The entry "X11/Unix" currently means Linux, Solaris or HP/UX, as well
as the X-specific version for Mac/OSX.

@multitable {Win9x native} {Emacs version} {XEmacs version}
@item OS @tab Emacs version @tab XEmacs version
@item X11/Unix @tab 21.1 @tab 21.4.9
@item Win9x cygwin @tab CVS? @tab 21.4.8
@item Win9x native @tab CVS? @tab 21.4.8
@end multitable

With display errors, XEmacs versions as early as 21.1.14 might also work.

@node Installation Trouble, Customization, Requirements, Frequently Asked Questions
@section Installation Trouble

@subsection I could not install the precompiled RPM binaries

Note that the binaries require @acronym{RPM} version 3. 


@subsection After Installation of the binaries nothing happened

The @acronym{RPM} packages are intended to run on a Redhat system. So
the TeX files, provided by package @file{preview-latex-common} go into
@file{/usr/share/texmf/tex/latex/preview} and
@file{/usr/share/texmf/doc/latex/styles/preview}. If for your system the
TeX files are in different places you have to set appropriate links.

Another possibility is to get the tar archive, edit the
@file{preview-latex.spec} accordingly, repack and then use the
appropriate @samp{rpm} command for building @acronym{RPM}s from a tar
archive.  If this works, please don't forget to send us the spec file,
so that we may be able to help others with your platform.

The XEmacs Lisp files provided by the @file{preview-latex-xemacs}
package are in XEmacs package format and will be installed in
@file{/usr/lib/xemacs/site-packages}. If on your system the Lisp 
files are in different places, you have to set appropriate links.


Alternatively you could install them locally in your home directory 
either in @file{~/.xemacs} (for XEmacs version below 21.4.x) or in 
@file{~/.xemacs/xemacs-packages} (for versions starting with 21.4).

@subsection After installation of the XEmacs @acronym{RPM} package, @AUCTeX{} does not work

Most likely you installed the @acronym{RPM} files and you have an XEmacs
version which uses a different architecture of directories, (SuSE is
known to have a no standard architecture, besides it changes it from
SuSE version to SuSE version). Additionally you have set in your init
file:

@example
(autoload 'LaTeX-preview-setup "preview")
(add-hook 'LaTeX-mode-hook #'LaTeX-preview-setup)
@end example
@noindent
Since XEmacs does not find @previewlatex{} but is supposed to do so,
it will not turn on @AUCTeX{} mode. So we recommend not to use the above
lines for XEmacs unless you compiled the Lisp files by yourself and know
perfectly what you are doing.

@node Customization,  , Installation Trouble, Frequently Asked Questions
@section Customization

@subsection How can I deactivate the annoying balloon mode?

Use the Preview/Customize menu or @kbd{@key{M-x} customize-variable} in
order to customize @code{preview-use-balloon-help} to `Off'.  This only
concerns XEmacs: tooltips under @w{GNU Emacs} can't be disabled, and
are less bothersome, anyhow.

@subsection How to include additionally environments like @code{enumerate}

Per default, @previewlatex is intended mainly for displaying
mathematical formulas, so environments like @code{enumerate} or
@code{tabular} (except where contained in a float) are not included.
You can include them however manually by adding the lines:

@example
\usepackage[displaymath,textmath,sections,graphics,floats]@{preview@}
\PreviewEnvironment@{enumerate@}
@end example

in your document header, that is before 

@example
\begin@{document@}
@end example
@noindent
In general, @file{preview} should be loaded as the last thing before
the start of document.

Be aware that

@example
\PreviewEnvironment@{...@}
@end example

does not accept a comma separated
list!  Also note that by putting more and more 

@example
\PreviewEnvironment@{...@}
@end example

in your document, it will look more and more like a @acronym{DVI} file
preview when running @previewlatex{}.  Since each preview is treated as
one large monolithic block by Emacs, one should really restrict
previews to those elements where the improvement in visual
representation more than makes up for the decreased editability.

@subsection What if I don't want to change the document?
The easiest way is to generate a configuration file in the current
directory.  You can basically either create @file{prdefault.cfg} which
is used for any use of the @samp{preview} package, or you can use
@file{prauctex.cfg} which only applies to the use from with Emacs.  Let
us assume you use the latter.  In that case you should write something like

@example
\InputIfFileExists@{preview/prauctex.cfg@}@{@}@{@}
\PreviewEnvironment@{enumerate@}
@end example

in it.  The first line inputs the system-wide default configuration
(the file name should match that, but not your own
@file{prauctex.cfg}), then you add your own stuff.

@subsection Suddenly I get gazillions of ridiculous pages?!?

When @previewlatex{} works on extracting its stuff, it typesets each
single preview on a page of its own.  This only happens when actual
previews get generated.  Now if you want to configure @previewlatex{} in
your document, you need to add your own @code{\usepackage} call to
@samp{preview} so that it will be able to interpret its various
definition commands.  It is an error to add the @code{active} option to
this invocation: you don't want the package to be active unless
@previewlatex{} itself enables the previewing operation (which it will).

@subsection Does @previewlatex{} work with presentation classes?

Version 0.7.3 works with the @samp{slides}, @samp{foils} and
@samp{seminar} classes.  Earlier versions failed with the
@samp{seminar} class and derived classes (such as @samp{prosper})
because they failed to take the magnification settings of the class
into account.

Since @previewlatex{} does not yet support PDF@LaTeX{}, presentation
packages like @samp{pdfscreen} and @samp{pdfslides} will not yet work.

Texpower appears to work.

@section Troubleshooting

@subsection @previewlatex{} does not work with package @samp{xy}

Actually, text math fails to get previewed.  The reason is that the
package @samp{xy} fiddles around with the @samp{$} character at
@code{\begin@{document@}} time, at which time it reverts the changes
@previewlatex{} has done to it.  A similar battle of ``who will be
last?'' is known from packages like @samp{hyperref}.  This particular
batte can be won by loading @samp{preview} by hand, @strong{after}
@samp{xy}, and specifying the @samp{delayed} option to it.  That way it
gets its changes in after those of @samp{xy}.

In short:
@example
\usepackage[all]@{xy@}
\usepackage[textmath,displaymath,floats,graphics,delayed]@{preview@}
@end example

@subsection Preview causes all sort of strange error messages

When running @previewlatex{} and taking a look at either log file or
terminal output, lots of messages like

@example
! Preview: Snippet 3 started.
<-><->
      
l.52 \item Sie lassen sich als Funktion $
                                         y = f(x)$ darstellen.
! Preview: Snippet 3 ended.(491520+163840x2494310).
<-><->
      
l.52 \item Sie lassen sich als Funktion $y = f(x)$
                                                   darstellen.
@end example

appear (previous versions generated messages looking even more like
errors).  Those are not real errors (as will be noted in the log
file).  Or rather, while they @strong{are} really @TeX{} error
messages, they are intentional.  This currently is the only reliable
way to pass the information from the @LaTeX{} run of @previewlatex{} to
its Emacs part about where the previews originated in the source text.
Since they are actual errors, you will also get @AUCTeX{} to state
@example
Preview-LaTeX exited abnormally with code 1 at Wed Sep  4 17:03:30
@end example
after the @LaTeX{} run in the run buffer.  This merely indicates that
errors were present, and errors will always be present when
@previewlatex{} is operating.  There might be also real errors, so in
case of doubt, look for them explicitly in either run buffer or the
resulting @file{.log} file.

@section @previewlatex{} when not using @LaTeX{}

@subsection Does @previewlatex{} work with  PDF@LaTeX{}?

Currently not. This might change in future releases though.  The usual
``volunteers welcome'' applies here.  @AUCTeX{} does not handle
PDF@LaTeX{} too well in version 11.11, either.  If you have configured
AUC@TeX{} to call PDF@LaTeX{} by default, for the sake of previewing a
normal @LaTeX{} will be substituted starting with @previewlatex{} 0.7.4.
Together with packages like @file{ifpdf.sty} documents which run
reasonably well under both PDF@LaTeX{} as well as @LaTeX{} can be
created, making it possible to use @previewlatex{} on them.

@subsection Does @previewlatex{} work with @samp{elatex}?

No problem here.  If you configure your @AUCTeX{} to use @samp{elatex},
or simply have @samp{latex} point to @samp{elatex}, this will work fine.

@subsection Does @previewlatex{} work with ConTeXt?

In short, no.  Currently three obstacles: the @samp{preview} package is
@LaTeX{}-dependent, @AUCTeX{} is required for @previewlatex{} operation
but does not support ConTeXt, and PDF@LaTeX{} is not supported yet.  The
last two obstacles might be removed at some time (@previewlatex{} should
become independent of @AUCTeX{}, and PDF@LaTeX{} will get supported),
but the first again requires volunteer work.

@subsection Does @previewlatex{} work with plain TeX?

Again, no.  Restructuring the @samp{preview} package for @samp{plain}
operation would be required.  Volunteers welcome.

In some cases you might get around by making a wrapper pseudo-Master
file looking like the following:

@example
\documentclass@{article@}
\usepackage@{plain@}
\begin@{document@}
\begin@{plain@}
\input myplainfile
\end@{plain@}
\end@{document@}
@end example
