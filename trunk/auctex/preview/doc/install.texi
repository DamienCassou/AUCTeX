@c This is to enable generation of text-file from this file
@ifset rawfile
@macro AUCTeX {}
@w{AUC @TeX{}}
@end macro
@macro LaTeX {}
La@TeX{}
@end macro
@macro previewlatex {}
preview-latex
@end macro
@end ifset
@c -----------------------
Installing @previewlatex{} should be simple: merely @code{./configure},
@code{make}, and @code{make install}.  Note that unlike most emacs
add-ins, @previewlatex{} consists of a @TeX{} part and an Emacs part (that
uses @AUCTeX{}).  This makes configuration a bit trickier than normal.
Please read through this document fully before installing anything.

@section Prerequisites

@itemize @bullet
@item A recent version of Emacs 21

The first version without known quirks and bugs affecting @previewlatex{}
is Emacs-21.1.  Only very recent pretest versions before that have slight
chances of working at all.  Since @previewlatex{} heavily exercises new
features of Emacs 21, getting the newest release is a good idea.

@item A working @AUCTeX{} installation

You need a working @AUCTeX{} installation.  @AUCTeX{} can be found at
@uref{http://mirrors.sunsite.dk/auctex/www/auctex/}.  All fairly recent
versions should work.  Since at the time of this writing, the latest
released version is 10.0g (with known issues), you should rather get an
alpha test version.  11.11 is known to work well.  If this option is not
available to you, try the patch described in the @file{PROBLEMS} file or
@ref{Known problems}).

@item A working @LaTeX{} installation

Preview should work with nearly any @LaTeX{} installation which contains
dvips, though most testing has taken place using tetex-based
distributions.

@item A recent GhostScript

This is not really needed to @emph{install} the package, but will be
required for stable operation of it.  Most problems we have encountered
come from interaction with not so recent versions of GhostScript, so it
is a good idea to have, say GhostScript 6.51 or later installed.

@item The @code{texinfo} package

This is needed for building the documentation.  At least @w{version 4.0}
is required.  If you don't have this, you may download a separate tar
file with the prebuilt documentation from Sourceforge and install it
over the main unpacked tar archive.
@end itemize

@section Configure

The first step is to configure the source code, telling it where
various files will be.  To do so, run

@example
./configure @var{options}
@end example

(Note: if you have fetched @previewlatex{} from @acronym{CVS} rather than
a regular release, you will have to first generate @file{./configure} by
running @code{autogen.sh} in the preview directory.)

On many machines, you will not need to specify any options, but if
configure cannot determine something on its own, you'll need to help
it out with one of these options

@table @code
@item --with-emacs=/path/to/emacs
If you are using a pretest which isn't in your @code{$PATH}, or
@code{configure} is not finding the right emacs binary, you can specify
it with this option.

@item --with-tex-site=/dir
If @AUCTeX{} is installed in a non-standard location (not in
@file{site-lisp}), use this option to specify the location of its
@file{tex-site.el} file.

@item --with-texmf=/dir@*--with-preview-dir=/dir
Both of these options can be used to specify the location to install the
preview @TeX{} files.  They are not necessary for most @TeX{} installs,
but may be used if you don't like the directory that configure is
suggesting.  Using @code{--with-texmf=/dir} you can specify where the
@TeX{} @acronym{TDS} directory hierarchy resides, and the @TeX{} files
will be installed in @code{/dir/tex/latex/preview}.  If you want to
specify an exact directory for the preview @TeX{} files, use
@code{--with-preview-dir=/dir}. In this case, the files will be placed
in @file{/dir}.

@item --with-lispdir=/dir
This tells where to install Emacs Lisp files.  Normally, this option is
unnecessary, but may be used if you don't like the directory that
configure is suggesting.

@item --disable-8bit-test
There can be problems if your @LaTeX{} implementation is not 8-bit
clean.  This switch disables the 8-bit test, in case you know that your
installation is clean and the test is simply failing.  By specifying
this switch, you signal your acceptance of having @previewlatex{} fail
on @LaTeX{} files containing 8-bit characters.  Check
@ifset rawfile
the @file{PROBLEMS} file
@end ifset
@ifclear rawfile
@ref{Known problems}
@end ifclear
for more details.

Failure of this test can also happen if you have fetched @previewlatex{}
via @acronym{CVS} and have run @code{autoconf} by hand instead of using
the provided @file{autogen.sh}: @code{autoconf} unfortunately clobbers
the language environment settings, and there is no way portable across
versions to preserve them.  The current version of the @file{autogen.sh}
script tries to work around this deficiency.

@end table

@section Build/install

Once @file{configure} has been run, simply enter

@example
make
@end example
@noindent 
at the prompt to byte-compile the lisp files, extract the @TeX{} files
and build the documentation files.  To install the files into the
locations chosen earlier, type

@example
make install
@end example
@noindent 
You may need special privileges to install, e.g., if you are installing
into system directories.

@section Loading the package

You need to place a few lines in your personal @file{.emacs} file (or a
site-wide configuration file).

If you used the option @code{--with-lispdir}, you have to make sure that
the directory where you installed the lisp files of @previewlatex{} is
in Emacs' @code{load-path} variable.  This could mean, for example,
adding the line @code{(add-to-list 'load-path "~/elisp/preview")} to
your @file{.emacs} file.

@cindex @file{.emacs} 
Next put the following lines into your @file{.emacs} file:

@example
(autoload 'LaTeX-preview-setup "preview")
(add-hook 'LaTeX-mode-hook #'LaTeX-preview-setup)
@end example

This will make Emacs load @file{preview.el} and let it install itself
into @AUCTeX{} when you first load a @LaTeX{} file (be sure to have
@AUCTeX{} up and working).  @kbd{C-c C-c g @key{RET}} should then give
you a graphics preview.  You can customize the default option set and
other settings of the Emacs package by entering @kbd{M-x customize-group
@key{RET} preview @key{RET}}.

There is a sample file @file{circ.tex} which you can use for testing
around a bit, and which serves as sort of a reference for initial bug
reports.  See
@ifset rawfile
the @file{PROBLEMS} file
@end ifset
@ifclear rawfile
@ref{Known problems}
@end ifclear
for a list of known problems.

