Installing preview-latex should be simple: merely @code{./configure},
@code{make}, and @code{make install}.

Note that unlike most emacs add-ins, preview-latex consists of a TeX
part and an Emacs part (that uses AUC @TeX{}). This makes configuration
a bit trickier than normal. Please read through this document fully
before installing anything.

@section Prerequisites

@itemize @bullet
@item A recent version of Emacs 21

The first version without known quirks and bugs affecting preview-latex
is Emacs-21.1. Only very recent pretest versions before that have slight
chances of working at all. Since preview-latex heavily exercises new
features of Emacs 21, getting the newest release is a good idea.

@item A working AUC @TeX{} installation

You need a working AUC @TeX{} installation. AUC @TeX{} can be found at
@url{http://mirrors.sunsite.dk/auctex/www/auctex/}. All fairly recent
versions should work.

@item A working LaTeX installation

Preview should work with nearly any La@TeX{} installation which contains
dvips, though most testing has taken place using tetex-based
distributions.
@end itemize

@section Configure

The first step is to configure the source code, telling it where
various files will be.  To do so, run

@example
./configure [OPTIONS]
@end example

(Note: if you have fetched preview-latex from CVS rather than a
regular release, you will have to first generate ./configure by
running autoconf in the preview directory.)

On many machines, you will not need to specify any options, but if
configure cannot determine something on its own, you'll need to help
it out with one of these options

@table @code
@item --with-emacs=/path/to/emacs
If you are using a pretest which isn't in your $PATH, or configure is
not finding the right emacs binary, you can specify it with this option.

@item --with-auctex=/dir
If AUC-TeX is installed in a non-standard location (not in site-lisp),
use this option to specify the location.

@item --with-texmf=/dir@*--with-preview-dir=/dir
Both of these options can be used to specify the location to install the
preview TeX files. They are not necessary for most TeX installs, but may
be used if you don't like the directory that configure is suggesting.
Using @code{--with-texmf=/dir} you can specify where the @TeX{} TDS
directory hierarchy resides, and the @TeX{} files will be installed in
@code{/dir/tex/latex/preview}. If you want to specify an exact directory
for the preview @TeX{} files, use @code{--with-preview-dir=/dir}. In
this case, the files will be placed in /dir.

@item --with-lispdir=/dir
This tells where to install Emacs Lisp files. Normally, this option is
unnecessary, but may be used if you don't like the directory that
configure is suggesting.
@end table

@section Building files

Once configure has been run, simply enter

@example
make
@end example

@noindent 
at the prompt to byte-compile the lisp files, extract the @TeX{} files
and build the documentation DVI file.

@section Installing files

To install the files into the locations chosen earlier, type

@example
make install
@end example

@noindent 
You may need special privileges to install, e.g. if you are installing
into system directories.

@section Loading the package

You need to place a few lines in your personal .emacs file (or a
site-wide configuration file).

If you used the option @code{--with-lispdir}, you have to make sure
that the directory where you installed the lisp files of preview-latex
is in Emacs' load-path variable.  This could mean, for example, adding
the line @code{(add-to-list 'load-path "~/elisp/preview")} to your
@file{.emacs} file.

Next put the following lines into your .emacs file:
@example
(autoload 'LaTeX-preview-setup "preview")
(add-hook 'LaTeX-mode-hook #'LaTeX-preview-setup)
@end example

This will make Emacs load preview.el and let it install itself into AUC
@TeX{} when you first load a LaTeX file (be sure to have AUC @TeX{} up
and working). @kbd{C-c C-c g RET} should then give you a graphics
preview. You can customize the default option set and other settings of
the Emacs package by entering @kbd{M-x customize-group RET preview RET}.

There is a sample file @file{circ.tex} which you can use for testing
around a bit, and which serves as sort of a reference for initial bug
reports.

@section If it does not work

Currently one of the most common problems is GhostScript failing. It
might be necessary to play around with the settings of the variable
preview-gs-options in order to get your version of GhostScript to work.
We want to support most reasonable versions of GhostScript, so if you
are experiencing problems, be sure to include the output of "gs -h" in
your report. If you use @kbd{M-x preview-report-bug RET}, this should be
done automatically.

A failing run will add information to the bottom of the process buffer
displayed by @kbd{C-c C-l}, or attach the information to the particular
images causing failure.

See the @file{PROBLEMS} file for a list of known problems.
