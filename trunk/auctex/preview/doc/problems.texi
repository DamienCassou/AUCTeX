@include macros.texi
@ifset rawfile
@c documentencoding is used by makeinfo in our --no-headers output.
@documentencoding ISO-8859-1
@chapter Known problems

@end ifset
@c -----------------------
@c @cindex @kbd{M-x preview-report-bug @key{RET}}
@c @cindex @code{preview-report-bug}
@c @cindex Report a bug
A number of issues are known concerning the interoperation with various
other software. Some of the known problems can be solved by moving to
newer versions of the problematic software or by simple patches.

@ifclear rawfile
@menu
* Problems with GhostScript::   
* Font problems with Dvips::    
* Emacs problems::              
* AUCTeX prior to 11.0::       
* Too small bounding boxes::    
* x-symbol interoperation::     
* Middle-clicks paste instead of toggling::  
@end menu
@end ifclear

If you find something not mentioned here, please send a bug report using
@kbd{M-x preview-report-bug @key{RET}}, which will fill in a lot of
information interesting to us and send it to the
@email{bug-auctex@@gnu.org} list.  Please use the bug reporting commands
if at all possible.

@node Problems with GhostScript, Font problems with Dvips, , Known problems
@section Problems with GhostScript

Most of the problems encountered come from interaction with GhostScript.
It is a good idea to have a fairly recent version of GhostScript
installed.  One problem occurs if you have specified the wrong
executable under Windows: the command line version of GhostScript is
called @file{GSWIN32C.EXE}, not @file{GSWIN32.EXE}.

When GhostScript fails, the necessary information and messages from
Ghostscript go somewhere.  If GhostScript fails before starting to
process images, you'll find the information at the end of the process
buffer you can see with @kbd{C-c C-l}.  If GhostScript fails while
processing a particular image, this image will be tagged with clickable
buttons for the error description and for the corresponding source file.

@strong{Important note:} Various versions of GhostScript have a security
bug which could seriously affect @previewlatex{}.  Current versions of
@previewlatex{} should work around this bug.  The symptom would be that
one out of two previews will fail, and previews get generated quite
slowly since @previewlatex{} starts a new GhostScript process after each
failure.  Please report any reoccurence of the problem.

The default options configurable with

@display
@kbd{M-x customize-variable @key{RET} preview-gs-options @key{RET}}
@end display
@vindex preview-gs-options
@noindent
include the options @option{-dTextAlphaBits=4} and
@option{-dGraphicsAlphaBits=4}.  These options have been reported to
make GhostScript 5.50 fail, but should work under GhostScript 6.51 and
later.  If you are experiencing problems, it might help to customize
them away.  Of course, this also takes away the joy of antialiasing, so
upgrading GhostScript might not be the worst idea after all.

The device names have changed over time, so when using an old
GhostScript, you may have problems with the devices demanded by the
customizable variable @code{preview-image-creators}.
@vindex preview-image-creators
In that case, make sure they fit your version of GhostScript, at least
the entry corresponding to the current value of
@code{preview-image-type}.
@vindex preview-image-type
While not being best in file size and image quality, setting
@code{preview-image-creators} to @code{jpeg} should probably be one of
the best bets for the purpose of checking basic operation, since that
device name has not changed in quite some time.  But @acronym{JPEG} is
not intended for text, but for photographic images.  On a more
permanent time scale, the best choice is to use @acronym{PNG} and
complain to your suppliers if either Emacs or GhostScript fail to
properly accommodate this format.

@node Font problems with Dvips, Emacs problems, Problems with GhostScript, Known problems
@section Font problems with Dvips
Some fonts have been reported to produce wrong characters with
@previewlatex{}.  @previewlatex{} calls Dvips by default with the option
@option{-Pwww} in order to get scalable fonts for nice results.  If you
are using antialiasing, however, the results might be sufficiently nice
with bitmapped fonts, anyway.  You might try @option{-Ppdf} for another
stab at scalable fonts, or other printer definitions.  Use

@display
@kbd{M-x customize-variable @key{RET} preview-fast-dvips-command @key{RET}}
@end display
@noindent
and
@display
@kbd{M-x customize-variable @key{RET} preview-dvips-command @key{RET}}
@end display
@noindent
in order to customize this.

One particular problem is that several printer setup files (typically in
a file called @file{/usr/share/texmf/dvips/config/config.pdf} if you are
using the @option{-Ppdf} switch) contain the @option{G} option for
`character shifting'.  This option will result in @samp{fi} being
rendered as @samp{@pounds{}} (British Pounds sign) in several fonts,
unless your version of Dvips has a long-standing bug in its
implementation fixed (only very recent versions of Dvips have).

@node Emacs problems, AUCTeX prior to 11.0, Font problems with Dvips, Known problems
@section Emacs problems

@itemize @bullet
@item GNU Emacs versions prior to 21.1

Don't use them.  20.x will not work, 21.0.x were prereleases, anyway.

@item Emacsen on Windows operating systems

As of GNU Emacs 21.2, no image support is available in Emacs under
Windows.  Without images, @previewlatex{} is useless.  The current
@acronym{CVS} version of Emacs available from
@uref{http://savannah.gnu.org/projects/emacs} now supports images
including the @acronym{PNG} format, so @w{Emacs 22} should work out of
the box once it is released.  Another option for Windows users might be
to try XEmacs.  @previewlatex{} has successfully been installed with
recent @acronym{CVS} versions of @w{GNU Emacs}, and both Cygwin XEmacs
and the native Windows XEmacs.

See
@ifset rawfile
the file @file{INSTALL.windows}
@end ifset
@ifclear rawfile
@ref{Installation under MS Windows}
@end ifclear
for detailed installation instructions for this platform.

@item XEmacs

There is are two larger problems known with older XEmacs releases.  One
leads to seriously mispositioned baselines and previews hanging far
above other text on the same line.  This should be fixed as of
XEmacs-21.4.9.

The other core bug causes a huge delay when XEmacs's idea of the state of
processes (like ghostscript) is wrong, and can lead to nasty spurious
error messages.  It should be fixed in version 21.4.8.

Previews will only remain from one session to the next if you have
version 1.81 or above of the @file{edit-utils} package, first released
in the 2002-03-12 sumo tarball.
@end itemize

@node AUCTeX prior to 11.0, Too small bounding boxes, Emacs problems, Known problems
@section @AUCTeX{} prior to 11.0

@AUCTeX{} versions up to and including 10.0g have a bug in the
calculation of the offsets for the start of a region.  This affects
@kbd{C-c C-r} commands where the start of the region does not lie on the
start of a line.  It also affects regeneration of single previews.  To
correct this, apply the patch in @file{patches/auctex-10.patch}.  It
might be more prudent to install a more recent version of @AUCTeX{},
however.

@node Too small bounding boxes, x-symbol interoperation, AUCTeX prior to 11.0, Known problems
@section Too small bounding boxes
The bounding box of a preview is determined by the @LaTeX{} package
using the pure @TeX{} bounding boxes.  If there is material extending
outside of the @TeX{} box, that material will be missing from the
preview image. For example this happens for the label-showing boxes from
the @code{showkeys} package (which has its own variant in
@previewlatex{}). Should this happen to you, try setting
@code{preview-fast-conversion} to `Off' 
@ifset rawfile
(see the manual).
@end ifset
@ifclear rawfile
(@pxref{The Emacs interface}).
@end ifclear
The conversion will take slightly more time, but instead
use the bounding boxes from the @acronym{EPS} files generated by Dvips.

Dvips generally does not miss things, but it does not understand
PostScript constructs like @code{\resizebox} or @code{\rotate} commands,
so will generate rather wrong boxes for those.  Dvips can be helped with
the @code{psfixbb} package option to preview 
@ifset rawfile
(see the manual),
@end ifset
@ifclear rawfile
(@pxref{The LaTeX style file}),
@end ifclear
which will tag the corners of the included @TeX{} box.  This will mostly
be convenient for @emph{pure} PostScript stuff like that created by
PStricks, which Dvips would otherwise reserve no space for.

@node x-symbol interoperation, Middle-clicks paste instead of toggling, Too small bounding boxes, Known problems
@section x-symbol interoperation

Thanks to the work of Christoph Wedler, starting with version
@samp{4.0h/beta} of x-symbol, the line parsing of @AUCTeX{} and
@previewlatex{} is fully supported.  Earlier versions exhibit problems.
However, versions before 4.2.2 will cause a drastic slowdown of
@previewlatex{}'s parsing pass, so we don't recommend to use versions
earlier than that.

If you wonder what x-symbol is, it is a package that transforms various
tokens and subscripts to a more readable form while editing and offers a
few input methods handy especially for dealing with math. Take a look at
@uref{http://x-symbol.sourceforge.net}.

x-symbol versions up to 4.5.1-beta at least require an 8bit-clean LaTeX
implementation (with regard to error messages) for cooperation with
@previewlatex{}.  Later versions may get along without it, like
@previewlatex{} does now.

If you experience problems with @file{circ.tex} in connection with both
x-symbol and Latin-1 characters, you may need to change your language
environment or, as a last resort, customize the variable
@code{LaTeX-command-style} by replacing the command @code{latex} with
@code{latex -translate-file=cp8bit}.

@node Middle-clicks paste instead of toggling,  , x-symbol interoperation, Known problems
@section Middle-clicks paste instead of toggling

This is probably the fault of your favorite package.  @file{flyspell.el}
and @file{mouse-drag.el} are known to be affected in versions before
@w{Emacs 21.3}.  Upgrade to the most recent version.

@file{isearch.el} also shows this effect while searches are in progress,
but the code is such a complicated mess that no patch is in sight.
Better just end the search with @kbd{@key{RET}} before toggling and
resume with @kbd{C-s C-s} or similar afterwards.  Since previews over
the current match will auto-open, anyway, this should not be much of a
problem in practice.
