@include macros.texi

Installation of @previewlatex{} under Windows has been verified to work
with current @acronym{CVS} versions of @w{GNU Emacs} (no released
version 21.x will work), and with both Cygwin and native versions of
XEmacs.  Here are the steps to perform:

@enumerate
@item
If you unpacked the distribution using Winzip or similar, you better
restart using infozip on the @samp{.zip} file, or standard Unix tools
(see the next point) on the @samp{.tar.gz} file: tools that make the
mistake of turning Unix line endings into MSDOS line endings will cause
trouble later in installation and operation.

@item
The installation of @previewlatex{} will require the MSYS tool set from
@uref{http://www.mingw.org}.  If you have the Cygwin tool set from
@uref{http://cygwin.com} installed, that should do just fine as well,
but it is quite larger and slower.  

If you are installing @previewlatex{} with one of those sets for an Emacs
compiled in a different one, you should try to avoid tool-specific path
names like @file{/cygwin/c}.  Instead, use the @file{c:} syntax.  It
might also help to use forward slashes instead of the backward slashes
more typical for @w{MS Windows}: while backward slashes are supposed to
work if properly escaped in the shell, this is one area easily
overlooked by the developers.  The same holds for file or directory
names with spaces in them.  Another noteworthy problem is that you
should be consistent with regard to using upper and lower case
characters for directory names: while Windows ignores any differences in
that area, the configuration scripts don't.

It is appreciated if you report any problems you experienced when
installing @previewlatex{}, as we are trying our best to make it work
even for platforms that we don't use ourselves.

Compiling Emacs is outside of the scope of this manual.  @previewlatex{}
itself does not require a @w{C compiler} for installation.

@item
Install a current version of XEmacs (such as 21.4.10) from
@uref{http://www.xemacs.org} or try getting and compiling an
@acronym{CVS} version of @w{GNU Emacs} from
@uref{http://savannah.gnu.org/cvs/?group=emacs,Savannah}.  Precompiled
versions happen to be available at @uref{http://www.crasseux.com/emacs/}
and @uref{http://nqmacs.sf.net/}.

@item
You need a working @TeX{} installation.  One popular installation under
Windows is @uref{http://www.miktex.org,Mik@TeX{}}.  Another much more
extensive system is @uref{http://www.tug.org/texlive,@w{@TeX{} Live}}
which is rather close to its Unix cousins.

@item
Install @uref{http://www.gnu.org/software/auctex,@AUCTeX{}} according to
its instructions.  It is recommended that you install at least 11.55:
PDF support starts with 11.51, and various bugs in particular for XEmacs
are fixed in 11.55.  This package is available from the XEmacs package
repository but might still be in prerelease state.

@item
You need a copy of @uref{http://www.cs.wisc.edu/~ghost,GhostScript}.

@item
@uref{http://www.perl.org,Perl} is needed for building the
documentation.  When we release tarballs for @previewlatex{}, we also
pregenerate the documentation.  If you install the @samp{prebuilt-docs}
tarball over the normal source after configuration is complete, the
dependencies for the documentation will be satisfied without needing to
run Perl.  If you are building @previewlatex{} from @acronym{CVS},
however, you'll need Perl.

@item
Now the fun stuff starts.  Unpack the @previewlatex{} distribution into
some installation directory.  @strong{Do not} unpack it right into your
Emacs' own directories: the installation will copy the material that
needs to be placed there.  Keep the installation directory separate:
you can remove its contents after installation completes.  Since you
are reading this, you probably have already unpacked @previewlatex{},
but it should still be easy to move it elsewhere now.

@item
Ready for takeoff.  Start some shell (typically @file{bash}) capable of
running @file{configure}, change into the installation directory and
call @command{./configure} with appropriate options.

Typical options you'll want to specify will be
@table @code
@item --prefix=@var{drive:/path/to/emacs-directory}
which tells @file{configure} where to perform the installation. It may
also make @file{configure} find (X)Emacs automatically, if this doesn't
happen try one of @samp{--with-emacs} or @samp{--with-xemacs} as
described below.  All automatic detection of files and directories
restricts itself to directories below the @var{prefix}.

@item --with-emacs
if you are installing Emacs.  You can use
@samp{--with-emacs=@var{/path/to/emacs}} to specify the name of the
installed Emacs executable, complete with its path if necessary (if
Emacs is not within a directory specified in your @var{PATH}
environment setting).

@item --with-xemacs
If you are using XEmacs, of course use @samp{--with-xemacs} in the same
manner.

@item --with-texmf-dir=@var{dir}
This will specify the directory where your @TeX{} installation sits.  If
your @TeX{} installation does not conform to the TDS (@TeX{} directory
standard), you may need to specify more options to get everything in
place.  See
@ifset rawfile
the `Configure' section in the @file{INSTALL} file
@end ifset
@ifclear rawfile
@ref{Configure}
@end ifclear
for more information about the available options.

@item --with-packagedir=@var{/dir}
is an XEmacs-only option giving the location of the package directory.
This will install and activate the package.  Emacs uses a different
installation scheme:

@item --with-lispdir=@var{/path/to/site-lisp}
This Emacs-only option tells where to install the setup file
@file{preview-latex.el} (if not autodetected).  The other files from
@previewlatex{} will be installed in a subdirectory called
@file{preview}.  If you have a @file{site-start.d} directory for
automatic package startup, please refer to the full installation
instructions in
@ifset rawfile
the @file{INSTALL} file.
@end ifset
@ifclear rawfile
@ref{Configure}
@end ifclear
in order to make use of it.
@end table

Calling @file{./configure --help} will tell about other options, but
those are almost never required.

Some executables might not be found in your path.  That is not a good
idea, but you can get around by specifying environment variables to
@file{configure}:
@example
GS="@var{/path/to/gswin32c.exe}" ./configure @dots{}
@end example
should work for this purpose.  @file{gswin32c.exe} is the usual name for
the required @emph{command line} executable under Windows; in contrast,
@file{gswin32.exe} is likely to fail.

@item
If you need to use the prebuilt documentation (see above), now is the
time to unpack it over the rest of the installation directory.

@item
Run @command{make} in the installation directory.
	
@item
Run @code{make install} in the installation directory.

@item
In the case of XEmacs, the package directory setup creates startup files
as necessary and you can skip to the next point.  If you are using
Emacs, the installation procedure should have left you with a file
@file{preview-latex.el} in a suitable place in @var{load-path}.  If this
is a special place where files get automatically loaded at startup,
@previewlatex{} will be automatically enabled in LaTeX modes.  If this
is not such a place, you can explicitly enable @previewlatex{} with the
incantation

@example
(load "preview-latex.el" nil t t)
@end example

in your personal @file{.emacs} file or, if you have more than one user
using your system, in the global @file{site-start.el} file.

@item
Load @file{circ.tex} into Emacs or XEmacs and see if you can generate
previews.

If this barfs and tells you that image type @samp{png} is not
supported, try adding the line

@example
(setq preview-image-type 'pnm)
@end example

at the end of your installed version of @file{preview-latex.el}.  If
this helps, complain to wherever you got your Emacs: all current
Emacs/XEmacs versions capable of running @previewlatex{} by now can be
compiled to support @acronym{PNG} images.  Which is important, because
@acronym{PNM} files take away @strong{vast} amount of disk space, and
thus also of load/save time.
@end enumerate

Well, that about is all.  Have fun!
