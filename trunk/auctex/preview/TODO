-*- text -*-

Modularize AUC TeX's error message parsing
 so that we do not need to steal code from AUC TeX, but can use
 AUC TeX's routines directly.  Submit to AUC TeX development.

Alternatively: factor out AUC TeX specific code
 and provide alternatives.  This could make preview-latex work with
 Emacs' default TeX/LaTeX modes which some people prefer.  Also one
 might provide an abstraction layer that would make it possible to
 embed preview-latex's core mechanisms into Emacs calc.

Fix GhostScript rendering of Emacs
 The current gs.el interface does not work well when multiple EPS
 images appear.  A new process is started for every single image, but
 the processes have to wait for one another.  See also code in
 xdisp.c from the Emacs distribution.

Think about temporary file handling
 The current solution may be suboptimal.  Perhaps a different dvi file
 from the main file would be preferable, perhaps compilation in a
 separate directory, perhaps support for more than one Emacs session
 or user properly accessing the same file.  In all fairness, the
 current _region_ mechanism of AUC TeX does not support this, either.

Port to XEmacs
 Under progress.

Explore possibilities for generating a single PS file
 Can we get at the page boundaries then with some PostScript
 trickery?  Or should we write them into the log as part of the
 preview error messages?  Would probably make implementing the
 next point easier:

Explore possibilities for working via PDF
 Going via latexpdf->GhostScript and a single file would certainly be
 faster than the current latex->dvips->GhostScript path.

Explore using DSC comments for reordering of processing
 That's just desirable for the last two proposals working from a
 single file.

Program a direct dvi->png rendering daemon
 that gets sent page requests and file names for both input and
 output and replaces the Dvips->GhostScript chain.  This could be
 done using DVIlib2 from the TeX-Guy project.
