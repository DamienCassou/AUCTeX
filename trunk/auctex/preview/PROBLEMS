-*- Outline -*-
** GhostScript failures

Most of the problems encountered come from interaction with
GhostScript.  It is a good idea to have a fairly recent version of
GhostScript installed.  In particular, the device names have changed
over the time, so you should check that the devices demanded by the
customizable variable preview-image-creators fit your version of
GhostScript, at least the entry corresponding to the current value of
preview-image-type.  While not being best in file size and image
quality, setting preview-image-creators to `jpeg' should probably be
one of the best bets, since that device name has not changed in quite
some time.

When GhostScript fails, the necessary information and messages from
Ghostscript go somewhere.  If GhostScript fails before starting to
process images, you'll find the information at the end of the process
buffer you can see with C-c C-l.  If GhostScript fails while
processing a particular image, this image will be tagged with
middle-clickable buttons for the error description and for the
corresponding source file.

The default options configurable with
M-x customize-variable RET preview-gs-options

include the options "-dTextAlphaBits=4" "-dGraphicsAlphaBits=4".
These options have been reported to make GhostScript 5.50 fail, but
are reported to work under GhostScript 6.51 and later.  If you are
experiencing problems, it might help to customize them away.  Of
course, this also takes away the joy of antialiasing, so upgrading
GhostScript might not be the worst idea after all.

** Various patches

Cut those out and pipe them through the patch program in the
appropriate directory.  Under Emacs, you can do this by first doing
M-x cd RET and then entering the directory in which the file to patch
resides, then marking the region in this file containing the patch and
doing M-| patch RET.

* Emacs-21.0.106 (don't use any earlier)

If you want to try the direct Postscript rendering from Emacs by
setting preview-image-type to `postscript', Emacs-21.0.106
unfortunately has a bug that should be corrected as of the following
version.  Earlier versions are not affected (although versions earlier
than 21.0.105 are mostly unusable for internal EPS support).  Use the
following patch for 21.0.106:

*** /home/tmp/emacs-21.0.106/lisp/gs.el~	Mon Sep 17 14:27:24 2001
--- /home/tmp/emacs-21.0.106/lisp/gs.el	Sun Sep 30 01:06:26 2001
***************
*** 115,124 ****
  requested image, and IMG-HEIGHT is the height of the requested
  image in pixels."
    (let* ((box (plist-get (cdr spec) :bounding-box))
! 	 (llx (elt 0 box))
! 	 (lly (elt 1 box))
! 	 (urx (elt 2 box))
! 	 (ury (elt 3 box))
  	 (rotation (or (plist-get (cdr spec) :rotate) 0))
  	 ;; The pixel width IMG-WIDTH of the pixmap gives the
  	 ;; dots, URX - LLX give the inch.
--- 115,124 ----
  requested image, and IMG-HEIGHT is the height of the requested
  image in pixels."
    (let* ((box (plist-get (cdr spec) :bounding-box))
! 	 (llx (elt box 0))
! 	 (lly (elt box 1))
! 	 (urx (elt box 2))
! 	 (ury (elt box 3))
  	 (rotation (or (plist-get (cdr spec) :rotate) 0))
  	 ;; The pixel width IMG-WIDTH of the pixmap gives the
  	 ;; dots, URX - LLX give the inch.

Emacs-21.0.106 still has one redisplay bug that you can fix with the
following patch (earlier versions have many more bugs):

Index: dispextern.h
===================================================================
RCS file: /cvsroot/emacs/emacs/src/dispextern.h,v
retrieving revision 1.110
retrieving revision 1.111
diff -c -r1.110 -r1.111
*** dispextern.h	2001/09/26 11:15:20	1.110
--- dispextern.h	2001/10/01 10:53:18	1.111
***************
*** 698,703 ****
--- 698,706 ----
    /* 1 means some glyphs in this row are displayed in mouse-face.  */
    unsigned mouse_face_p : 1;
  
+   /* 1 means this row was ended by a newline from a string.  */
+   unsigned ends_in_newline_from_string_p : 1;
+ 
    /* Continuation lines width at the start of the row.  */
    int continuation_lines_width;
  };
Index: xdisp.c
===================================================================
RCS file: /cvsroot/emacs/emacs/src/xdisp.c,v
retrieving revision 1.670
retrieving revision 1.671
diff -c -r1.670 -r1.671
*** xdisp.c	2001/09/27 08:35:44	1.670
--- xdisp.c	2001/10/01 10:52:55	1.671
***************
*** 11495,11501 ****
  	 for instance.  This is easier than to set up the iterator
  	 exactly, and it's not a frequent case, so the additional
  	 effort wouldn't really pay off.  */
!       while (MATRIX_ROW_ENDS_IN_MIDDLE_OF_CHAR_P (last_unchanged_at_beg_row)
  	     && last_unchanged_at_beg_row > w->current_matrix->rows)
  	--last_unchanged_at_beg_row;
  
--- 11495,11502 ----
  	 for instance.  This is easier than to set up the iterator
  	 exactly, and it's not a frequent case, so the additional
  	 effort wouldn't really pay off.  */
!       while ((MATRIX_ROW_ENDS_IN_MIDDLE_OF_CHAR_P (last_unchanged_at_beg_row)
! 	      || last_unchanged_at_beg_row->ends_in_newline_from_string_p)
  	     && last_unchanged_at_beg_row > w->current_matrix->rows)
  	--last_unchanged_at_beg_row;
  
***************
*** 13003,13008 ****
--- 13004,13011 ----
        if (ITERATOR_AT_END_OF_LINE_P (it))
  	{
  	  int used_before = row->used[TEXT_AREA];
+ 
+ 	  row->ends_in_newline_from_string_p = STRINGP (it->object);
  
  	  /* Add a space at the end of the line that is used to
  	     display the cursor there.  */

* AucTeX up to 10.0g

AucTeX versions up to 10.0g have a bug in the calculation of the
offsets for the start of a region.  This affects C-c C-r commands
where the start of the region does not lie on the start of a line.  To
correct this, apply the following patch (since I have edited around in
it, you'll get messages about offsets).

Index: tex-buf.el
===================================================================
RCS file: /pack/anoncvs/auctex/tex-buf.el,v
retrieving revision 1.162
retrieving revision 1.172
diff -u -r1.162 -r1.172
--- tex-buf.el	2001/04/11 11:53:25	1.162
+++ tex-buf.el	2001/10/13 20:32:53	1.172
@@ -90,6 +90,17 @@
 (make-variable-buffer-local 'TeX-command-region-begin)
 (make-variable-buffer-local 'TeX-command-region-end)
 
+(defun TeX-current-offset (&optional pos)
+  "Calculate line offset of POS, or of point if POS is nil."
+  (save-restriction
+    (widen)
+    (save-excursion
+      (let ((inhibit-point-motion-hooks t)
+	    (inhibit-field-text-motion t))
+	(if pos (goto-char pos))
+	(+ (count-lines (point-min) (point))
+	   (if (bolp) 0 -1))))))
+
 (defun TeX-command-region (&optional old)
   "Run TeX on the current region.
 
@@ -123,8 +134,7 @@
     (TeX-region-create (TeX-region-file TeX-default-extension)
 		       (buffer-substring begin end)
 		       (file-name-nondirectory (buffer-file-name))
-		       (count-lines (save-restriction (widen) (point-min))
-				    begin)))
+		       (TeX-current-offset begin)))
   (TeX-command (TeX-command-query (TeX-region-file)) 'TeX-region-file))
 
 (defun TeX-command-buffer ()
@@ -546,11 +558,13 @@
   (let ((default TeX-command-default)
 	(buffer (TeX-process-buffer-name file))
 	(process nil)
-	(dir (TeX-master-directory)))
+	(dir (TeX-master-directory))
+	(command-buff (current-buffer)))
     (TeX-process-check file)		; Check that no process is running
-    (setq TeX-command-buffer (current-buffer))
+    (setq-default TeX-command-buffer command-buff)
     (with-output-to-temp-buffer buffer)
     (set-buffer buffer)
+    (set (make-local-variable 'TeX-command-buffer) command-buff)
     (setq buffer-read-only nil)
     (if dir (cd dir))
     (insert "Running `" name "' on `" file "' with ``" command "''\n")
@@ -946,8 +959,7 @@
 				""
 			      ;;(beginning-of-line 1)
 			      (re-search-backward "[\r\n]" nil t)
-			      (setq trailer-offset
-				    (count-lines (point-min) (point)))
+			      (setq trailer-offset (TeX-current-offset))
 			      (buffer-substring (point) (point-max))))))))))
     (save-excursion
       (set-buffer file-buffer)
@@ -959,12 +971,12 @@
 	      TeX-region-extra
 	      "\n\\message{ !name(" original ") !offset(")
       (insert (int-to-string (- offset
-				(count-lines (point-min) (point))))
+				(1+ (TeX-current-offset))))
 	      ") }\n"
 	      region
 	      "\n\\message{ !name("  master-name ") !offset(")
       (insert (int-to-string (- trailer-offset
-				(count-lines (point-min) (point))))
+				(1+ (TeX-current-offset))))
 	      ") }\n"
 	      trailer)
       (run-hooks 'TeX-region-hook)

* AucTeX versions from 11.01 up to version 11.05:

The following patch is necessary:

Index: tex-buf.el
===================================================================
RCS file: /pack/anoncvs/auctex/tex-buf.el,v
retrieving revision 1.171
retrieving revision 1.172
diff -u -r1.171 -r1.172
--- tex-buf.el	2001/10/13 10:08:02	1.171
+++ tex-buf.el	2001/10/13 20:32:53	1.172
@@ -95,9 +95,11 @@
   (save-restriction
     (widen)
     (save-excursion
-      (if pos (goto-char pos))
-      (+ (count-lines (point-min) (point))
-	 (if (bolp) 0 -1)))))
+      (let ((inhibit-point-motion-hooks t)
+	    (inhibit-field-text-motion t))
+	(if pos (goto-char pos))
+	(+ (count-lines (point-min) (point))
+	   (if (bolp) 0 -1))))))
 
 (defun TeX-command-region (&optional old)
   "Run TeX on the current region.


The CVS version of AucTeX is already fixed with regard to that
particular bug.


* x-symbol

Current versions of x-symbol confuse the line parsing of
preview-LaTeX.  They also confuse that of Auc-TeX, but with less
glaring consequences.  A solution is being worked on, but this depends
on a few factors that will probably lead to some changed APIs in
AucTeX.
