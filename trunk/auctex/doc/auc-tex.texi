\input texinfo
@setfilename auc-tex.info
@settitle AUC TeX
@c footnotestyle separate
@c paragraphindent 2
@comment %**end of header 
 
@c $Id: auc-tex.texi,v 1.9 1993-02-16 04:09:40 amanda Exp $

@titlepage
@title AUC @TeX{}
@subtitle A much enhanced La@TeX{} mode for GNU Emacs.
@subtitle February 1993, for AUC @TeX{} Version 7.0
  
@author by Kresten Krab Thorup
@author and Per Abrahamsen
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1992 Kresten Krab Thorup
Copyright @copyright{} 1993 Per Abrahamsen
 
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
 
@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).
 
@end ignore
@end titlepage
@page


@ifinfo
@node top, Copying, (dir), (dir)
@top AUC @TeX{}
 
AUC @TeX{} is a fully integrated environment for editing La@TeX{} and
@TeX{} files.@refill

This file documents AUC @TeX{} version 7.0.

Although AUC @TeX{} contains a large number of features, there are no
reasons to despair.  You can continue to write @TeX{} and La@TeX{}
documents the way you are used to, and only start using the multiple
features in small steps.  AUC @TeX{} is not monolithic, each feature
described in this manual is useful by itself, but together they provide
an environment where you will make very few LaTeX errors, and makes it
easy to find the errors that may slip through anyway.

NOTE: This documentation is preliminary.  It should however cover most
important points.  Corrections or perhaps rewrites of sections
are VERY WELCOME.@refill

Kresten Krab Thorup
@end ifinfo

@menu
* Copying::                     GNU General Public License
* Introduction::                Introduction 
* Frequently Used Commands::    Inserting Frequently Used Commands  
* Advanced Features::           Advanced Editing Features 
* Formatting::                  Formatting and Printing 
* Installation::                Installation
* Supported symbols::           Currently supported symbols in LaTeX-math-mode

* Key Index::                   Index of keybindings
* Function Index::              Index of commands
* Variable Index::              Index of user options
* Concept Index::               Index of concepts

 --- The Detailed Node Listing ---

Inserting Frequently Used Commands  

* Quotes::                      Smart Insertion of Double Quotes
* Font Specifiers::             Inserting Font Specifiers 
* Sectioning::                  Inserting chapters, sections, etc. 
* Environments::                Inserting Environment Templates

Inserting Environment Templates

* Floats::                      Floats
* Itemize-like::                Itemize-like
* Tabular-like::                Tabular-like
* Customizing environments::    Customizing environments

Advanced Editing Features 

* Mathematics::                 Entering Mathematics 
* Completion::                  Completion 
* Commenting::                  Commenting 
* Marking and formatting::      Marking, Formatting and Indenting
* Outline::                     Outlining the Document
* Miscellaneous::               Miscellaneous editing commands

Formatting and Printing

* Commands::                    Executing Commands
* Debugging::                   Catching the errors
* Control::                     Controlling the output
* Multifile::                   Multifile Documents

@end menu

@node Copying, Introduction, top, top
@unnumbered Copying
The following is a slightly modified version of the GNU Emacs General
Public License

  1. You may copy and distribute verbatim copies of AUC @TeX{} source
code as you receive it, in any medium, provided that you conspicuously
and appropriately publish on each copy a valid copyright notice
"Copyright (C) 1992 Kresten Krab Thorup" (or with whatever year is
appropriate); keep intact the notices on all files that refer to this
License Agreement and to the absence of any warranty; and give any other
recipients of the AUC @TeX{} program a copy of this License Agreement
along with the program.  You may charge a distribution fee for the
physical act of transferring a copy.
 
  2. You may modify your copy or copies of AUC @TeX{} source code or
any portion of it, and copy and distribute such modifications under
the terms of Paragraph 1 above, provided that you also do the following:
 
    a) cause the modified files to carry prominent notices stating
    that you changed the files and the date of any change; and
 
    b) cause the whole of any work that you distribute or publish,
    that in whole or in part contains or is a derivative of AUC @TeX{}
    or any part thereof, to be licensed at no charge to all third
    parties on terms identical to those contained in this License
    Agreement (except that you may choose to grant more extensive
    warranty protection to some or all third parties, at your option).
 
    c) You may charge a distribution fee for the physical act of
    transferring a copy, and you may at your option offer warranty
    protection in exchange for a fee.
 
Mere aggregation of another unrelated program with this program (or its
derivative) on a volume of a storage or distribution medium does not bring
the other program under the scope of these terms.
 
  3. You may copy and distribute AUC @TeX{} (or a portion or derivative
of it, under Paragraph 2) in byte compiled form under the terms of
Paragraphs 1 and 2 above provided that you also do one of the following:
 
    a) accompany it with the complete corresponding machine-readable
    source code, which must be distributed under the terms of
    Paragraphs 1 and 2 above; or,
 
    b) accompany it with a written offer, valid for at least three
    years, to give any third party free (except for a nominal
    shipping charge) a complete machine-readable copy of the
    corresponding source code, to be distributed under the terms of
    Paragraphs 1 and 2 above; or,
 
    c) accompany it with the information you received as to where the
    corresponding source code may be obtained.  (This alternative is
    allowed only for non commercial distribution and only if you
    received the program in object code or executable form alone.)
 
For an executable file, complete source code means all the source code for
all modules it contains.
 
  4. You may not copy, sub license, distribute or transfer AUC @TeX{}
except as expressly provided under this License Agreement.  Any attempt
otherwise to copy, sub license, distribute or transfer AUC @TeX{} is void
and your rights to use AUC @TeX{} under this License agreement shall be
automatically terminated.  However, parties who have received computer
software programs from you with this License Agreement will not have
their licenses terminated so long as such parties remain in full
compliance.
 
@node Introduction, Frequently Used Commands, Copying, top
@unnumbered Introduction 

AUC @TeX{} is a comprehensive customizable integrated environment for
writing input files for LaTeX using GNU Emacs.
 
AUC @TeX{} lets you run @TeX{}/LaTeX and other LaTeX-related tools, such as
a output filters or post processor from inside Emacs.  Especially
`running LaTeX' is interesting, as AUC @TeX{} let's you browse through
the errors @TeX{} reported, while it moves the cursor directly to the
reported error, and displays some documentation for that particular
error.  This will even work when the document is spread over several
files.
 
AUC @TeX{} automatically indents your `LaTeX-source', not only as you
write it---you can also let it indent and format an entire document.  It
has a special outline feature, which can greatly help you `getting the
overview' of a document.
 
Apart from these special features, AUC @TeX{} provides an large range of
handy Emacs macros, which in several different ways can help you write
your LaTeX documents fast and without pain.  Here's a short list of the
major features:

@itemize @bullet
@item
Insertion of templates for logical-structural compositions such as
environments and sections.

@item 
Hot-keys for easy access to certain often used constructs, e.g.,
font changes, accented letters, and mathematical symbols.

@item 
Running application programs (such as @TeX{}), and then parsing
the output so that errors in the document may be located 
easily.

@item 
Support for multi-file documents.

@item 
Online help for (La)@TeX{} error messages.

@item 
Outlining---i.e., manipulating the document as a composition
of nested/sequential logical constructs.

@item 
Instant formatting and indentation of the ASCII-document in
order to make it easier to read.

@item 
`Completion' (and thereby spell-checking) of partially written
control sequences.
@end itemize


@node Frequently Used Commands, Advanced Features, Introduction, top
@chapter Inserting Frequently Used Commands  

The most commonly used commands/macros of AUC @TeX{} are those which
simply insert templates for often used @TeX{} and/or La@TeX{}
constructs, like font changes, handling of environments, etc.
These features are very simple, and easy to learn, and help you
avoiding stupid mistakes like mismatched braces, or
@kbd{\begin@{@}}-@kbd{\end@{@}} pairs.@refill

@menu
* Quotes::			Inserting double quotes
* Font Specifiers::             Inserting Font Specifiers 
* Sectioning::                  Inserting chapters, sections, etc. 
* Environments::                Inserting Environment Templates
@end menu

@node Quotes, Font Specifiers,  , Frequently Used Commands
@section Smart Insertion of Double Quotes 

@cindex Quotes
@cindex Double quotes

In @TeX{} literal double quotes @samp{"like this"} is seldom used,
instead two single quotes is used @samp{``like this''}.  To help you
insert these efficiently, AUC @TeX{} allows you to continue to press
@key{"} to insert two single quotes.

@deffn Command TeX-insert-quote @var{count}
@kindex "
(@key{"}) Insert @samp{``}, @samp{''} or @samp{"} according to preceding
character.  With prefix argument, insert @var{count} @samp{"}
characters.
@end deffn

@cindex @file{german.sty}
@cindex German users
Users of @file{german.sty}, or other people who uses the literal
@samp{"} often, will want to disable this feature.  They can do that by
inserting the following hook in their @file{.emacs} file.

@lisp
(setq TeX-mode-hook
      (function (lambda () (local-set-key "\"" 'self-insert-command))))
@end lisp

@node Font Specifiers, Sectioning, Quotes, Frequently Used Commands
@section Inserting Font Specifiers 

@cindex Fonts
@cindex Font macros
@cindex Changing font
@cindex Specifying a font

Perhaps the most used keyboard commands of AUC @TeX{} are the short-cuts
available for easy insertion of font changing macro.  They all put the
font change inside a @TeX{} group, a practice that help preventing
subtle errors.  The most significant advantage of using these command
instead of typing it in yourself, is that the braces will always match
correctly.  If you give an argument (that is, type @kbd{C-u}) to the
font command, the current region will be put inside the group, and point
will be left unchanged.  This is quite useful when you later discover
that some phrase should be emphasised.  The following table shows the
available commands, with @code{@point{}} indicating the position where
the position where the text will be inserted.@refill

@table @kbd
@item C-c C-f C-r 
@kindex C-c C-f C-r
@cindex @code{\rm}
Insert roman @r{@{\rm @point{}@}} text.

@item C-c C-f C-b
@kindex C-c C-f C-b
@cindex @code{\bf}
Insert @b{bold face} @kbd{@{\bf @point{}@}} text.

@item C-c C-f C-i
@kindex C-c C-f C-i
@cindex @code{\it}
Insert @i{italics} @kbd{@{\it @point{}\/@}} text.

@item C-c C-f C-e
@kindex C-c C-f C-e
@cindex @code{\em}
Insert @i{emphasized} @kbd{@{\em @point{}\/@}} text.

@item C-c C-f C-s
@kindex C-c C-f C-s
@cindex @code{\sl}
Insert @i{slanted} @kbd{@{\sl @point{}\/@}} text.

@item C-c C-f C-t
@kindex C-c C-f C-t
@cindex @code{\tt}
Insert @t{typewriter} @kbd{@{\tt @point{}@}} text.

@item C-c C-f C-c
@kindex C-c C-f C-c
@cindex @code{\sc}
Insert @sc{small caps} @kbd{@{\sc @point{}@}} text.

@end table

@deffn Command TeX-font @var{arg}
@kindex C-c C-f
(@kbd{C-c C-f}) Read one character from the minibuffer, and insert a
@TeX{} font macro as specified in the variable @code{TeX-font-list}.
With prefix argument, make the font change valid for the current region.
@end deffn

@defopt TeX-font-list
A list of available font commands, each entry in the list is itself a
list.  The first element of each entry is the key to active the font.
The second element is the string to insert before point, and the third
element is the string to insert after point.
@end defopt

@node Sectioning, Environments, Font Specifiers, Frequently Used Commands
@section Inserting chapters, sections, etc. 
@cindex Sectioning
@cindex Sections
@cindex Chapters
@cindex @code{\chapter}
@cindex @code{\section}
@cindex @code{\subsection}
@cindex @code{\label}

Insertion of sectioning macros, that is @samp{\chapter},
@samp{\section}, @samp{\subsection}, etc. and accompanying
@samp{\label}'s may be eased by using @kbd{C-c C-s}.  This command is
highly customizable, the following describes the default behavior.

When invoking you will be asked for a section macro to insert.  An
appropriate default is automatically selected by AUC @TeX{}, that is
either: at the top of the document; the top level sectioning for that
document style, and any other place: The same as the last occurring
sectioning command.

Next, you will be asked for the the actual name of that section, and
last you will be asked for a label to be associated with that section.
The label will be prefixed by the value specified in
@code{LaTeX-section-hooks}.

@deffn Command LaTeX-section @var{arg}
@kindex C-c C-s
(@kbd{C-c C-s}) Insert a sectioning command.

Determinate the type of section to be inserted, by the argument
@var{arg}.@refill

@itemize @bullet
@item
If @var{arg} is nil or missing, use the current level.
@item
If @var{arg} is a list (selected by C-u), go downward one level.
@item
If @var{arg} is negative, go up that many levels.
@item
If @var{arg} is positive or zero, use absolute level:
@itemize +
@item
0 : part
@item
1 : chapter
@item
2 : section
@item
3 : subsection
@item
4 : subsubsection
@item
5 : paragraph
@item
6 : subparagraph
@end itemize
@end itemize

The following variables can be set to customize the function.

@table @code
@item LaTeX-section-hooks
Hooks to be run when inserting a section.
@item LaTeX-section-label	
Prefix to all section references.
@end table

@end deffn

The precise behavior of @code{LaTeX-section} is defined by the contents
of @code{LaTeX-section-hooks}.

@defopt LaTeX-section-hooks
List of hooks to run when a new section is inserted.

The following variables are set before the hooks are run

@table @var
@item level
Numeric section level, default set by prefix arg to @code{LaTeX-section}.
@item name
Name of the sectioning command, derived from @var{level}.
@item title
The title of the section, default to an empty string.
@item toc
Entry for the table of contents list, default nil.  
@item done-mark
Position of point afterwards, default nil meaning after the inserted
text.
@end table

A number of hooks are already defined.  Most likely, you will be able to
get the desired functionality be choosing from these hooks.

@table @code
@item LaTeX-section-level-hook
@findex LaTeX-section-level-hook
Query the user about the name of the sectioning command.  Modifies
@var{level} and @var{name}.
@item LaTeX-section-title-hook
@findex LaTeX-section-title-hook
Query the user about the title of the section. Modifies @var{title}.
@item LaTeX-section-toc-hook
@findex LaTeX-section-toc-hook
Query the user for the toc entry.  Modifies @var{toc}.
@item LaTeX-section-section-hook
@findex LaTeX-section-section-hook
Insert La@TeX{} section command according to @var{name}, @var{title},
and @var{toc}.  If @var{toc} is nil, no toc entry is inserted.  If
@var{toc} or @var{title} are empty strings, @var{done-mark} will be
placed at the point they should be inserted.
@item LaTeX-section-label-hook
@findex LaTeX-section-label-hook
Insert a label after the section command.  Controlled by the variable
@code{LaTeX-section-label}.
@end table 

To get a full featured @code{LaTeX-section} command, insert 

@lisp
(setq LaTeX-section-hooks
      '(LaTeX-section-level-hook
	LaTeX-section-title-hook
	LaTeX-section-toc-hook
	LaTeX-section-section-hook
	LaTeX-section-label-hook))
@end lisp

in your @file{.emacs} file.
@end defopt

The behavior of @code{LaTeX-section-label-hook} is determined by the
variable @code{LaTeX-section-label}.@refill

@defopt LaTeX-section-label
Default prefix when asking for a label.

If it is a string, it it used unchanged for all kinds of sections. 
If it is nil, no label is inserted.
If it is a list, the list is searched for a member whose car is equal
to the name of the sectioning command being inserted.  The cdr is then
used as the prefix.  If the name is not found, or if the cdr is nil,
no label is inserted.

@cindex Prefix for labels
@cindex Label prefix
@cindex Labels
By default, chapters have a prefix of @samp{cha:} while sections and
subsections have a prefix of @samp{sec:}.  Labels are not automatically
inserted for other types of sections.
@end defopt

@node Environments,  , Sectioning, Frequently Used Commands
@section Inserting Environment Templates
@cindex Environments
@cindex @samp{\begin}
@cindex @samp{\end}

A quite large apparatus is available supporting insertions of
environments, that is @samp{\begin@{@}} --- @samp{\end@{@}} pairs.  

AUC @TeX{} is aware of most of the actual environments available in a
specific document.  This is achieved by examining your
@kbd{\documentstyle} command, and consulting a precompiled list of
environments available in a large number of styles.

You insert an environment with @kbd{C-c C-e}, and select an environment
type.  Depending on the environment, AUC @TeX{} may ask more questions
about the optional parts of the selected environment type.

@deffn Command LaTeX-environment
@kindex C-c C-e
(@kbd{C-c C-e})  AUC @TeX{} will prompt you for an environment
to insert.  At this prompt, you may press @kbd{TAB} or @kbd{SPC} to
complete a partially written name, and/or to get a list of available
environments.  After selection of a specific environment AUC @TeX{} may
prompt you for further specifications.  
@end deffn

As a default selection, AUC @TeX{} will suggest the environment last
inserted or, as the first choice the value of the variable
@code{LaTeX-default-environment}.

@defopt LaTeX-default-environment
Default environment to insert when invoking @samp{LaTeX-environment}.
@end defopt

If the document is empty, or the cursor is placed at the top of the
document, AUC @TeX{} will default to insert a `document' environment.

Most of these are described further in the following sections, and you
may easily specify more, as described in `Customizing environments'.

@menu
* Floats::                      Floats
* Itemize-like::                Itemize-like
* Tabular-like::                Tabular-like
* Customizing environments::    Customizing environments
@end menu

@node Floats, Itemize-like,  , Environments
@subsection Floats
@cindex Floats
@cindex Figures
@cindex Figure environment
@cindex Tables
@cindex Table environment

Figures and tables (i.e., floats) may also be inserted using AUC @TeX{}.
After choosing either `figure' or `table' in the environment list
described above, you will be prompted for a number of additional things.

@table @var
@item float-to
This field is the option of float environments that control how they are
placed in the final document.  In La@TeX{} this is a sequence of the
letters @samp{htbp} as described in the La@TeX{} manual.  The value will
default to the value of @code{LaTeX-float}.
@vindex LaTeX-float

@item caption
This is the caption of the float.  

@item label
The label of this float.  The label will have a default prefix, which is
controlled by the variables @code{LaTeX-figure-label} and
@code{LaTeX-table-label}.
@vindex LaTeX-figure-label
@vindex LaTeX-table-label
@cindex Prefix for labels
@cindex Label prefix
@cindex Labels
@end table

Moreover, in the case of a `figure' environment, you will be asked if
you want to insert a `center' environment inside the figure.

@defopt LaTeX-float
Default placement for floats.
@end defopt

@defopt LaTeX-figure-label
Prefix to use for figure labels.
@end defopt

@defopt LaTeX-table-label
Prefix to use for table labels.
@end defopt

@node Itemize-like, Tabular-like, Floats, Environments
@subsection Itemize-like
@cindex Itemize
@cindex Enumerates
@cindex Descriptions
@cindex Items
@cindex \item

In an itemize-like environment, nodes (i.e., @kbd{\item}s) may be
inserted using @kbd{C-c LFD}.  

@deffn Command LaTeX-insert-item
@kindex C-c LFD
(@kbd{C-c LFD}) Close the current item, move to the next line and insert
an appropriate @samp{\item} for the current environment. That is,
`itemize' and `enumerate' will have @samp{\item } inserted, while
`description' will have @samp{\item[]} inserted.
@end deffn

@node Tabular-like, Customizing environments, Itemize-like, Environments
@subsection Tabular-like

When inserting Tabular-like environments, that is, `tabular' `array'
etc., you will be prompted for a template for that environment.

@node Customizing environments,  , Tabular-like, Environments
@subsection Customizing environments

The known environments and special cases is controlled by the variable
@code{LaTeX-environment-alist}.

@defopt LaTeX-environment-alist
A association list of all the possible environments in LaTeX mode. 

Each entry is a cons-cell.  The car is a string containing the name of
the name of the environment.  The cdr (if not nil), is taken to be a
function to be called when starting LaTeX-environment.  The function is
called with the car as argument.
@end defopt

You may add your own favorite environments, by setting
@code{LaTeX-mode-hook} in your @file{.emacs} file.
@vindex LaTeX-mode-hook

@lisp 
(setq LaTeX-mode-hook 
      (function (lambda () (setq LaTeX-environment-alist
                                 (append '(("myenv")
			                   ("myenv2" . LaTeX-myenv2-hook))
				          LaTeX-environment-alist)))))
@end lisp

The function, (in this case @code{LaTeX-myenv2-hook}) will then simply
be called with the actual environment name as the only argument, and it
is free to do whatever you like. refer to the file @file{ltx-env.el}
from the distribution for examples of use.

@node Advanced Features, Formatting, Frequently Used Commands, top
@chapter Advanced Editing Features 
@cindex Advanced features
        
The previous chapter described how to write the main body of the text
easily and with a minimum of errors.  In this chapter we will describe
some features for entering more specialized sorts of text, and for
indenting and navigating through the document.
 
@menu
* Mathematics::                 Entering Mathematics 
* Completion::                  Completion 
* Commenting::                  Commenting 
* Marking and formatting::      Marking, Formatting and Indenting
* Outline::                     Outlining the Document
* Miscellaneous::               Miscellaneous editing commands
@end menu

@node Mathematics, Completion,  , Advanced Features
@section Entering Mathematics 
@cindex Mathematics
@cindex Symbols
@cindex Abbreviations

@TeX{} is written by a mathematician, and has always contained good
support for formatting mathematical text.  AUC @TeX{} supports this
tradition, by offering a special minor mode for entering text with many
mathematic symbols.  You can enter this mode by typing @kbd{C-c
~}.@refill

@deffn Command LaTeX-math-mode
@kindex C-c ~
(@kbd{C-c ~}) Toggle LaTeX-math-mode.  This is a minor mode rebinding
the key @code{LaTeX-math-abbrev-prefix} to allow easy typing of
mathematical symbols.  @kbd{`} will read a character from the keyboard,
and insert the symbol as specified in @code{LaTeX-mathlist}.  If given a
prefix argument, the symbol will be surrounded by dollar signs.@refill
@end deffn

You can use another prefix key (instead of @kbd{`}) by  setting the
variable LaTeX-math-abbrev-prefix.

@defopt LaTeX-math-abbrev-prefix
A string containing the prefix of @code{LaTeX-math-mode} commands;
This value defaults to @kbd{`}. @refill
@end defopt

The variable @code{LaTeX-mathlist} holds the actual mapping.

@defopt LaTeX-mathlist
Alist containing key-command mappings to use in @code{LaTeX-math-mode}.
The car of each element is the key and the cdr is the macro name. 
@end defopt

@node Completion, Commenting, Mathematics, Advanced Features
@section Completion 
@cindex Completion 
@cindex Expansion
@cindex Macro expansion
@cindex Macro completion

Emacs lisp programmers probably know the @code{lisp-complete-symbol}
command, usually bound to @code{M-TAB}.  Users of the wonderful ispell
mode know and love the @code{ispell-complete-word} command from that
package.  Similarly, AUC @TeX{} has a @code{TeX-complete-symbol}
command, usually bound to @kbd{C-c TAB}.  Using
@code{LaTeX-complete-symbol} makes it easier to type and remember the
names of long La@TeX{} macros.
 
In order to use @code{TeX-complete-symbol}, you should write a backslash
and the start of the macro.  Typing @kbd{C-c TAB} will now complete as
much of the macro, as it unambiguously can.  For example, if you type
`@samp{\renam}' and then `@kbd{C-c TAB}, it will expand to
`@samp{\renewcommand}'.
 
@deffn Command TeX-complete-symbol
@kindex C-c TAB
Complete @TeX{} symbol before point.
@end deffn

@strong{FALSE:} Along with AUC @TeX{} comes a small perl script that may
be used to generate the file @file{tex-symb.el} which is the actual list
of symbols used for completion.  The script is called
@file{extract_tex_symbols.pl}.  The scripts must however be edited for
your local installation.

@node Commenting, Marking and formatting, Completion, Advanced Features
@section Commenting 

It is often necessary to temporarily comment out a region of @TeX{} or
La@TeX{} code.  This can be done with the commands @kbd{C-c ;} and
@kbd{C-c %}.  @kbd{C-c ;} will comment out all lines in the current
region, while @kbd{C-c %} will comment out the current paragraph.  To
uncomment, simply type @kbd{C-u C-c ;} to uncomment all lines in the
region, or @kbd{C-u C-c %} uncomment all comment lines around point.  

By default, these commands will insert or remove a single @samp{%}.  To
insert more than one, give an argument. @kbd{C-u 5 C-c %} will add five
@samp{%} to each line, while @kbd{C-u - 5 C-c %} will remove up to 5
@samp{%} from each line.

@deffn Command TeX-comment-region @var{count}
@kindex C-c ;
(@kbd{C-c ;}) Add or remove @samp{%} from the beginning of each line in
the current region, as specified by @var{count}.

If @var{count} is nil (no prefix argument), 1 @samp{%} will be added to
each line.

If @var{count} is a list (a non-numeric prefix argument), 1 @samp{%}
will be removed from each line.

If @var{count} is positive, @var{count} @samp{%}'s will be added to each
line. 

If @var{count} is negative, @var{count} @samp{%}'s will be removed from
each line.
@end deffn

@deffn Command TeX-comment-paragraph @var{count}
@kindex C-c %
(@kbd{C-c %}) Add or remove @samp{%} from the beginning of each line in
the current paragraph, as specified by @var{count}.  When removing
@samp{%}'s the paragraph is considered to consist of all preceding and
succeeding lines starting with a @samp{%}, until the first non-comment
line.

If @var{count} is nil (no prefix argument), 1 @samp{%} will be added to
each line.

If @var{count} is a list (a non-numeric prefix argument), 1 @samp{%}
will be removed from each line.

If @var{count} is positive, @var{count} @samp{%}'s will be added to each
line. 

If @var{count} is negative, @var{count} @samp{%}'s will be removed from
each line.
@end deffn

@node Marking and formatting, Outline, Commenting, Advanced Features
@section Marking, Formatting and Indenting
@cindex Formatting
@cindex Filling
@cindex Indenting
@cindex Reformatting
@cindex Reindenting

AUC @TeX{} contains very advanced handling of indentation and
reformatting of the La@TeX{} source.  If you have already tried AUC
@TeX{} with @code{auto-fill-mode} enabled, you may have noted that the
source is automatically indented and formatted as you write it.  More
over, AUC @TeX{} is able to format sections of text on demand.

It is important to realize, that AUC @TeX{} comes with `formatting' in
two fashions.  Either letting @TeX{} format the file, or letting AUC
@TeX{} make the ASCII document look better.

Indentation is done by La@TeX{} environments and by @TeX{} groups, that
is the body of an environment is indented by the value of
@code{LaTeX-indent-level} (default 2).  Also, items of an `itemize-like'
environment are indented by the value of @code{LaTeX-item-indent},
default @minus{}2.  This indentation makes it easier to see the
structure of the document, and to catch errors such as a missing close
brace.  Thus, the indentation is done for precisely the same reasons
that you would indent ordinary computer programs.
@vindex LaTeX-indent-level
@vindex LaTeX-item-indent

The following is a short sample of an itemize environment indented by
AUC @TeX{}.  If more environment are nested, they are indented
`accumulated' just like most programming languages usually are seen
indented in nested constructs.

@example
\begin@{itemize@}
\item Insertion of templates for logical-structural compositions such as
  environments and sections.
\item Hot-keys for easy access to certain often used constructs, e.g.,
  font changes, accented letters, and mathematical symbols.
\item Running application programs (such as \TeX), and then parsing
  the output so that errors in the document may be located 
  easily.
\item Support for multi-file documents.
\item Online help for \AllTeX\ error messages.
\item Outlining\Dash i.e., manipulating the document as a composition
  of nested/sequential logical constructs.
\item Instant formatting and indentation of the \ascii-document in
  order to make it easier to read.
\item `Completion' (and thereby spell-checking) of partially written
  control sequences.
\end@{itemize@}
@end example

You can format and indent single lines, paragraphs, environments, or
sections.

@table @kbd
@item TAB
@kindex TAB
@findex LaTeX-indent-line
@code{LaTeX-indent-line} will indent the current line.

@item LFD
@kindex LFD
@code{reindent-then-newline-and-indent} indents the current line, and
then inserts a new line (much like @kbd{RET}) and move the cursor to an
appropriate position by the left margin.

@item M-q
@kindex M-q
Alias for @kbd{C-c C-q C-p}

@item C-c C-q C-p
@kindex C-c C-q C-p
@findex LaTeX-format-paragraph
@code{LaTeX-format-paragraph} will reformat or `fill' the current
paragraph.

@item C-c C-q C-e
@kindex C-c C-q C-e
@findex LaTeX-format-environment
@code{LaTeX-format-environment} will reformat or `fill' the current
environment.  This may e.g. be the `document' environment, in which case
the entire document will be formatted.

@item C-c C-q C-s
@kindex C-c C-q C-s
@findex LaTeX-format-section
@code{LaTeX-format-section} will reformat or `fill' the current
logical sectional unit. 

@item M-g
@kindex M-g
Alias for @kbd{C-c C-q C-r}

@item C-c C-q C-r
@kindex C-c C-q C-r
@findex LaTeX-format-region
@code{LaTeX-format-region} will format or `fill' the current region. 
@end table

@strong{Warning:} The formatting cannot handle tabular-like
environments. Those will be completely messed-up if you try to format
them.

@defopt LaTeX-indent-level
Number of spaces to add to the indentation for each @samp{\begin} not
matched by a @samp{\end}, and each @samp{@{} nor matched by a
@samp{@}}.@refill 
@end defopt

@defopt LaTeX-item-indent
Number of spaces to add to the indentation for @samp{\item}'s in list
environments.@refill
@end defopt

@node Outline, Miscellaneous, Marking and formatting, Advanced Features
@section Outlining the Document
@cindex Outlining
@cindex Headers
@cindex Sections
@cindex Overview
@cindex Folding

Minor mode for editing outlines with selective display.  Headings are
lines which start with asterisks: one for major headings, two for
sub headings, etc.  Lines not starting with asterisks are body lines.

Body text or sub-headings under a heading can be made temporarily
invisible, or visible again.  Invisible lines are attached to the end of
the heading, so they move with it, if the line is killed and yanked
back.  A heading with text hidden under it is marked with an ellipsis
(@dots{}).

@table @kbd
@item C-c C-o C-n   
@kindex C-c C-o C-n   
@findex outline-next-visible-heading
@code{outline-next-visible-heading} move by visible headings

@item C-c C-o C-p
@findex outline-previous-visible-heading
@kindex C-c C-o C-p
@code{outline-previous-visible-heading}

@item C-c C-o C-f
@findex outline-forward-same-level
@kindex C-c C-o C-f
@code{outline-forward-same-level} similar but skip sub headings

@item C-c C-o C-b
@findex outline-backward-same-level
@kindex C-c C-o C-b
@code{outline-backward-same-level}

@item C-c C-o C-u
@findex outline-up-heading move from
@kindex C-c C-o C-u
@code{outline-up-heading move from} sub heading to heading

@item C-c C-o C-t
@findex hide-body
@kindex C-c C-o C-t
@code{hide-body} make all text invisible (not headings).

@item C-c C-o C-a
@findex show-all
@kindex C-c C-o C-a
@code{show-all} make everything in buffer visible.

@item C-c C-o C-o
@findex outline-minor-mode
@kindex C-c C-o C-o
@code{outline-minor-mode} leave outline mode.
@end table

The remaining commands are used when point is on a heading line.
They apply to some of the body or sub headings of that heading.

@table @kbd
@item C-c C-o C-h
@findex hide-subtree
@kindex C-c C-o C-h
@code{hide-subtree} make body and sub headings invisible.

@item C-c C-o C-s
@findex show-subtree
@kindex C-c C-o C-s
@code{show-subtree} make body and sub headings visible.

@item C-c C-o C-i
@findex show-children
@kindex C-c C-o C-i
@code{show-children} make direct sub headings visible.  No effect on
body, or sub headings 2 or more levels down. With arg N, affects
sub headings N levels down.

@item C-c C-o C-c
@findex hide-entry
@kindex C-c C-o C-c
@code{hide-entry} make immediately following body invisible.

@item C-c C-o C-e
@findex show-entry
@kindex C-c C-o C-e
@code{show-entry} make it visible.

@item C-c C-o C-l
@findex hide-leaves
@kindex C-c C-o C-l
@code{hide-leaves} make body under heading and under its sub headings
invisible. The sub headings remain visible.

@item C-c C-o C-x
@findex show-branches
@kindex C-c C-o C-x
@code{show-branches} make all sub headings at all levels visible.
@end table

@defopt outline-prefix-char
@kindex C-c C-o
The prefix char (@kbd{C-c C-o}) used to activate the outline commands.
You most likely want to set this to something shorter.
@end defopt 

You can use outlining in other modes as well, the function to do this is
@code{outline-minor-mode}. 

@deffn Command outline-minor-mode  @var{prefix}
Enters outline minor mode.  With @var{prefix}: no-nil: turn outline mode
on.  nil: turn outline mode off.
@end deffn

@defopt outline-regexp
Regular expression matching header lines.  When using outline-minor mode
outside AUC @TeX{}, this is per default set to lines beginning with one
or more stars.
@end defopt

@defopt outline-level-function
Function calculating the level of a header.  Outside AUC @TeX{}, this is
per default the length of the string matched by @code{outline-regexp}.
@end defopt

@node Miscellaneous,  , Outline, Advanced Features
@section Miscellaneous editing commands

A number of more or less `free-lance' functions are available. They are
listed here, as they don't seem to fit in anywhere else.

@deffn Command TeX-insert-braces
@kindex C-c @{
@kbd{C-c @{}) Make a pair of braces and position the cursor
to type inside of them.
@end deffn

@deffn Command TeX-insert-macro
@kindex C-c C-m
(@kbd{C-c C-m}) Inserts the text @samp{\@{@}} with the cursor
placed right after the @samp{\}. 
@end deffn

@node Formatting, Installation, Advanced Features, top
@chapter Formatting and Printing 

The most powerful features of AUC @TeX{} may be those allowing you to
run (La)@TeX{} from within Emacs, and moreover allowing you to
@emph{debug} your documents.  

@menu
* Commands:: 		Invoking external commands.
* Debugging::		Debugging @TeX{} and La@TeX{} output.
* Control::  		Controlling the processes.
* Multifile::           Multifile Documents.
@end menu

@node Commands, Debugging,  , Formatting
@section Executing Commands
@cindex Formatting
@cindex Running LaTeX
@cindex Running TeX
@cindex Running Commands
@cindex Default Command
@cindex Header
@cindex Trailer
@cindex Setting the header
@cindex Setting the trailer
@cindex Region
@cindex Region file
@cindex Setting the default command
@cindex Commands
@cindex External Commands

There are two ways to run an external command, you can either run it on
all of the current document with @code{TeX-command-master}, or on the
current region with @code{TeX-command-region}.@refill

@deffn Command TeX-command-master
@kindex C-c C-c
(@kbd{C-c C-c}).  Query the user for a command, and run it on the master
file associated with the current buffer.  The name of the master file is
controlled by the variable @code{TeX-master}.  The available commands are
controlled by the variable @code{TeX-command-list}.@refill
@vindex TeX-master
@vindex TeX-command-list
@end deffn

@xref{Installation} for a discussion about @code{TeX-command-list} and
@ref{Multifile} for a discussion about @code{TeX-master}.

@deffn Command TeX-command-region
@kindex C-c C-c
(@kbd{C-c C-c}).  Query the user for a command, and run it on the
``region file''.  Some commands (typically those invoking @TeX{} or
La@TeX{}) will write the current region into the region file, after
extracting the header and tailer from the master file.  The name of the
region file is controlled by the variable @code{TeX-region}.  The name of
the master file is controlled by the variable @code{TeX-master}.  The
header is all text up to the line matching the regular expression
@code{TeX-header-end}.  The trailer is all text from the line matching
the regular expression @code{TeX-trailer-start}.  The available commands
are controlled by the variable @code{TeX-command-list}.@refill
@vindex TeX-region
@vindex TeX-header-end
@vindex TeX-trailer-start
@vindex TeX-master
@vindex TeX-command-list
@end deffn

AUC @TeX{} will allow one process for each document, plus one process
for the region file to be active at the same time.  Thus, if you are
editing @var{n} different documents, you can have @var{n} plus one
processes running at the same time.  If the last process you started was
on the region, the commands described in @ref{Debugging} and
@ref{Control} will work on that process, otherwise they will work on the
process associated with the current document.

@defopt TeX-region
The name of the file for temporarily storing the text when formatting
the current region.
@end defopt

@defopt TeX-header-end
A regular expression matching the end of the header.  By default, this
is @samp{\begin@{document@}} in La@TeX{} mode and @samp{%**end of
header} in @TeX{} mode.@refill
@end defopt 

@defopt TeX-trailer-start
A regular expression matching the start of the trailer.  By default,
this is @samp{\end@{document@}} in La@TeX{} mode and @samp{\bye} in
@TeX{} mode.@refill
@end defopt

AUC @TeX{} will try to guess what command you want to invoke, but by
default it will assume that you want to run @TeX{} in @TeX{} mode and
La@TeX{} in La@TeX{} mode.  You can overwrite this by setting the
variable @code{TeX-command-default}.

@defopt TeX-command-default
The default command to run in this buffer.  Must be an entry in
@code{TeX-command-list}.
@end defopt

If you want to overwrite the values of @code{TeX-header-end},
@code{TeX-trailer-start}, or @code{TeX-command-default}, you can do for
all files by setting them in either @code{TeX-mode-hook},
@code{plain-TeX-mode-hook}, or @code{LaTeX-mode-hook}.  To overwrite
them for a single file, define them as file variables (@pxref{File
Variables,,,emacs,The Emacs Editor}).  You do this by putting special
formatted text i near the end of the file.
@cindex Variables
@cindex File Variables
@cindex Local Variables

@example
% Local Variables: 
% TeX-header-end: "% End-Of-Header"
% TeX-trailer-start: "% Start-Of-Trailer"
% TeX-command-default: "SliTeX"
% End: 
@end example

@node Debugging, Control, Commands, Formatting
@section Catching the errors
@cindex Debugging
@cindex Errors
@cindex Parsing errors
@cindex Parsing TeX output
@cindex Next error
@cindex Parsing LateX errors
@cindex Overfull boxes
@cindex Bad boxes
@cindex Wonderful boxes

Once you've formatted your document you may `debug' it, i.e. browse
through the errors (La)@TeX{} reported.

@deffn Command TeX-next-error
(@kbd{C-c `}).  Go to the next error reported by @TeX{}.  The view will
be split in two, with the cursor placed as close as possible to the
error in the top view.  In the bottom view, the error message will be
displayed along with some explanatory text.
@end deffn

Normally AUC @TeX{} will only report real errors, but you may as well
ask it to report `bad boxes' as well.

@deffn Command TeX-toggle-debug-bad-boxes
(@kbd{C-c C-w}).  Toggle whether AUC @TeX{} should stop at bad boxes
(i.e. over/under full boxes) as well as at normal errors.
@end deffn

As default, AUC @TeX{} will display that special @samp{*help*} buffer
containing the error reported by @TeX{} along with the documentation.
There is however an `expert' option, which allows you to display the
real @TeX{} output.

@defopt TeX-display-help
When non-nil AUC @TeX{} will automatically display a help text whenever
an error is encountered using @code{TeX-next-error} (@kbd{C-c `}).
@end defopt

@node Control, Multifile, Debugging, Formatting
@section Controlling the output
@cindex Controlling the output
@cindex Output
@cindex Redisplay output
@cindex Processes
@cindex Killing a process
@cindex Finding the master file
@cindex Master file
@cindex Stopping a process
@cindex Current file
@cindex Finding the current file

A number of commands are available for controlling the output of an
application running under AUC @TeX{}

@deffn Command TeX-kill-job
(@kbd{C-c C-k}).  Kill currently running external application.
This may be either of @TeX{}, La@TeX{}, previewer Bib@TeX{} etc.
@end deffn

@deffn Command TeX-recenter-output-buffer
(@kbd{C-c C-l}).  Recenter the output buffer so that the bottom line is
visible.
@end deffn

@deffn Command TeX-home-buffer
(@kbd{C-c C-h}). Go to the `master' file in the document associated with
the current buffer, or if already there, to the file where the current
process was started. 
@end deffn

@node Multifile,  , Control, Formatting
@section Multifile Documents
@cindex Multifile Documents
@cindex Documents
@cindex Documents with multiple files
@cindex Multiple Files
@cindex Many Files
@cindex Including
@cindex \include
@cindex Inputing
@cindex \input
@cindex Master file

If you spread a document over many files (as you are likely to do if
there are multiple authors, or if you have not yet discovered the power
of the outline commands (@pxref{Outline})), that can be done by having a
``master'' file from where you include the various files with the @TeX{}
macro @samp{\input} or the La@TeX{} macro @samp{\include}.  These
files may also include other files themselves.  However, to format the
document you must run the commands on the top level file.@refill

When you for example ask AUC @TeX{} to run a command on the master file,
it has no way to know what the name of the master file is.  If it find
the line indication the end of the header in a master file
(@code{TeX-header-end}), it can figure out for itself that this is a
master file.  Otherwise, it will ask for the name of the master file
associated with the buffer.  To avoid asking you again, AUC @TeX{} will
automatically insert the name of the master file as a file variable
(@pxref{File Variables,,,emacs,The Emacs Editor}).  You can also insert
the file variable yourself, by putting the following text at the end of
your files.  
@findex TeX-header-end

@example
% Local Variables: 
% TeX-master: "mymaster"
% End: 
@end example

You should always set this variable to the top level document.

@defopt TeX-master
The name of the master file for the document currently being edited.
This variable is buffer local, and is usually set in the file variable
section at the end of the file.
@end defopt

@node Installation, Supported symbols, Formatting, top
@chapter Installation of AUC @TeX{}
@cindex Installation
@cindex Make
@cindex @file{Makefile}
@cindex @file{.emacs}
@cindex Site initialization
@cindex Initialization
@cindex @file{tex-site.el}
@cindex @file{tex-init.el}
@cindex Personal customization
@cindex Site customization
@cindex Customization
@cindex Customization, personal
@cindex Customization, site
@cindex @file{ltx-dead.el}
@cindex Accented characters
@cindex Accents

First, you should consult the file @file{tex-site.el} and edit it to fit
your local site.  The file is documented, so that shouldn't be that
hard.  Don't worry if you don't understand some of it -- you can read
this documentation later to fine tune your installation.

Next, edit the file @file{Makefile} in the auctex directory to set up
paths for installation of the files. 

Now type @kbd{make all}, and the whole thing will be `made'.  If this
succeeds, now type @kbd{make install}, and it will all be installed.

Finally, you will need to insert the following lines in your .emacs
file. If it is a cite installation, these lines should rather be in the
local init file.  This will make sure, that AUC @TeX{} will be loaded
automatically when you load a file width suffix @samp{.tex}.@refill
 
@lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Tell Emacs where the files of AUC TeX is located
 
(setq load-path (cons (expand-file-name "PATH_FOR_AUC-TEX") load-path))
 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Make AUC TeX be loaded automatically when one of the following
;; commands are invoked.
 
(make-variable-buffer-local 'outline-prefix-char)
(setq-default outline-prefix-char "\C-c\C-o")
(make-variable-buffer-local 'outline-regexp)
(setq-default outline-regexp "[*\^l]+")
(make-variable-buffer-local 'outline-level-function)
(setq-default outline-level-function 'outline-level-default)

(autoload 'tex-mode "tex-init" "Automatic select TeX or LaTeX mode" t)
(autoload 'plain-tex-mode "tex-init" "Mode for Plain TeX" t)
(autoload 'latex-mode "tex-init" "Mode for LaTeX" t)
(autoload 'LaTeX-math-mode    "tex-math"      "Math mode for TeX." t)
(autoload 'outline-minor-mode "min-out" "Minor Outline Mode." t)
 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Let tex-mode be called, if a `.tex' file is loaded.  The function
;; tex-mode will automatically select either plain-TeX or LaTeX mode
 
(setq auto-mode-alist (append '(("\\.tex$" . tex-mode))
                              auto-mode-alist))
@end lisp

Also, you should insert the following in your .emacs file.  The following
may have to be modified to fit personal taste:

@lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Note:  C-c <letter> sequences are reserved for users own bindings
;;
 
(defun Ctl-C-prefix ()                  ; Use Ctl-C as a command prefix
  Ctl-C-keymap)
(setq Ctl-C-keymap (make-keymap))       ; allocate Ctl-C keymap table
(global-set-key "\C-c" (Ctl-C-prefix))  ; define Ctl-C function
 
(define-key Ctl-C-keymap "m" 'LaTeX-math-mode)
(define-key Ctl-C-keymap "o" 'outline-minor-mode)

 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Personal defaults for AUC-TeX mode
;;
 
(setq LaTeX-figure-label "fig:")
(setq LaTeX-table-label "tab:")
(setq LaTeX-section-label "sec:")
(setq LaTeX-default-style-options "a4,12pt,dk")
(setq LaTeX-float "hbtp")
@end lisp

For efficiency of AUC @TeX{}, you should byte compile the .el files.
This is done automatically if you edit the make file run it.
 
See the file @file{ltx-dead.el} for how to install
@code{LaTeX-dead-keys-mode}.  This is the mode which handles accented
letters.  

@node Supported symbols,  , Installation, top
@appendix Currently supported symbols in LaTeX-math-mode
 

@table @kbd
@item ` ?
Help, list of math symbols.

@item ` a
@samp{\alpha}

@item ` b
@samp{\beta}

@item ` d
@samp{\delta}

@item ` e
@samp{\epsilon}

@item ` f
@samp{\phi}

@item ` g
@samp{\gamma}

@item ` h
@samp{\eta}

@item ` k
@samp{\kappa}

@item ` l
@samp{\lambda}

@item ` m
@samp{\mu}

@item ` n
@samp{\nu}

@item ` o
@samp{\omega}

@item ` p
@samp{\pi}

@item ` q
@samp{\theta}

@item ` r
@samp{\rho}

@item ` s
@samp{\sigma}

@item ` t
@samp{\tau}

@item ` u
@samp{\upsilon}

@item ` x
@samp{\chi}

@item ` y
@samp{\psi}

@item ` z
@samp{\zeta}

@item ` D
@samp{\Delta}

@item ` G
@samp{\Gamma}

@item ` Q
@samp{\Theta}

@item ` L
@samp{\Lambda}

@item ` Y
@samp{\Psi}

@item ` P
@samp{\Pi}

@item ` S
@samp{\Sigma}

@item ` U
@samp{\Upsilon}

@item ` V
@samp{\Phi}

@item ` O
@samp{\Omega}

@item ` C-f
@samp{\rightarrow}

@item ` C-b
@samp{\leftarrow}

@item ` C-p
@samp{\uparrow}

@item ` C-n
@samp{\downarrow}

@item ` <
@samp{\leq}

@item ` >
@samp{\geq}

@item ` ~
@samp{\tilde}

@item ` I
@samp{\infty}

@item ` A
@samp{\forall}

@item ` E
@samp{\exists}

@item ` !
@samp{\not}

@item ` i
@samp{\in}

@item ` *
@samp{\times}

@item ` .
@samp{\cdot}

@item ` @{
@samp{\subset}

@item ` @}
@samp{\supset}

@item ` [
@samp{\subseteq}

@item ` ]
@samp{\supseteq}

@item ` \
@samp{\backslash}

@item ` /
@samp{\setminus}

@item ` +
@samp{\cup}

@item ` -
@samp{\cap}

@item ` (
@samp{\langle}

@item ` )
@samp{\rangle}

@item ` C-e
@samp{\exp}

@item ` C-s
@samp{\sin}

@item ` C-c
@samp{\cos}

@item ` C-^
@samp{\sup}

@item ` C-_
@samp{\inf}

@item ` C-d
@samp{\det}

@item ` C-l
@samp{\lim}

@item ` C-t
@samp{\tan}

@item ` ^
@samp{\hat}

@item ` v
@samp{\vee}
@end table

@node Key Index, Function Index, , Top
@comment    node-name,         next,       previous, up
@unnumbered Key Index

@printindex ky

@node Function Index, Variable Index, Key Index, Top
@comment    node-name,         next,       previous, up
@unnumbered Function Index

@printindex fn

@node Variable Index, Concept Index, Function Index, Top
@comment    node-name,         next,       previous, up
@unnumbered Variable Index

@printindex vr

@node     Concept Index,     , Variable Index, Top
@comment      node-name, next,       previous, up
@unnumbered Concept Index

@printindex cp

@summarycontents
@contents
@bye

@comment Local Variables:
@comment mode: texinfo
@comment mode: outline-minor
@comment outline-regexp: "@node "
@comment End:
