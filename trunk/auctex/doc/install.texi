@chapter Installation of AUC @TeX{}
@cindex Installation
@cindex Make
@cindex @file{Makefile}
@cindex @file{.emacs}
@cindex Site initialization
@cindex Initialization
@cindex @file{tex-site.el}
@cindex @file{tex-init.el}
@cindex Personal customization
@cindex Site customization
@cindex Customization
@cindex Customization, personal
@cindex Customization, site

Before you do anything else, make sure that you have the latest version
of @TeX{}info installed.  It is available by ftp from
@samp{prep.ai.mit.edu}.  You need at least version 2.16.

First, you should edit the file @file{tex-site.el} to fit your local
site.  You do this by looking at the customization section in the
beginning of @file{tex.el} and copy the definitions that are wrong for
your site to @file{tex-site.el}.  Do @emph{not} edit @file{tex.el}
directly, or you will have to do all the work over again when you
upgrade AUC @TeX{}.  Be sure to get the following two variables right,
or you will not be able to complete the installation procedure:

@defopt TeX-lisp-directory
The directory where you want to install the AUC @TeX{} lisp files. 
@end defopt

@defopt TeX-macro-global
Directories containing the site's @TeX{} style files.
@end defopt

You probably also need to change @code{TeX-command-list} to make sure
that the commands used for starting @TeX{}, printing, etc. work on your
system. 
@vindex TeX-command-list

Finally, edit @code{TeX-printer-list} to contain the printers available
at your site.
@vindex TeX-printer-list

The best way to change @code{TeX-macro-global}, @code{TeX-command-list},
@code{TeX-printer-list} and the other customization variables is to copy
their definitions from @file{tex.el} to @file{tex-site.el} and change
them there.  This way, when you upgrade AUC @TeX{} you can keep the old
@file{tex-site.el} file so you don't need to customize it again.

Now copy @file{tex-site.el} to somewhere where emacs can find it, the
best place is in the @file{.../emacs/site-lisp/} which is automatically
searched in newer emacsen.  Alternatively, you can insert the code from
@file{tex-site.el} directly into your @file{.emacs} or
@file{site-start.el} file, if you want to save the overhead of opening
another file.

Next, edit the file @file{Makefile} in the AUC @TeX{} directory to set up
paths for installation of the files.  Be sure that

@table @code
@item bindir
Is set to the directory where you want the LaCheck binary to be
installed.

@item infodir
Is set to the directory where you want the AUC @TeX{} ``info''
documentation to be installed.  

@item aucdir
Is set to the directory where you want the lisp files for AUC @TeX{} to
be installed.  This @strong{must} be the same directory as you specified
for @code{TeX-lisp-directory} in @file{tex-site.el}.  If you unpacked
AUC @TeX{} in that directory (@code{TeX-lisp-directory}), you should set
@code{aucdir} to @samp{.} in order to avoid copying the byte compiled
lisp files.

If you already have an old version of AUC @TeX{} in that directory, you
must delete it before installing the new version.  Otherwise the wrong
version of the files may be loaded during the byte compilation.

@item mandir
Is set to the directory where you want to install the (unformatted) man
page for LaCheck.

@item CC
Is the compiler you want to use for compiling the LaCheck program. Is
set to `gcc' by default. Change this is `cc' or whatever your system
compiler is called if you do not have GCC installed.

@end table

Then type @kbd{make all}, and the whole thing will be `made'.  If this
succeeds, type @kbd{make install}, and it will be installed.

Now, tell the users to insert 
@lisp
        (require 'tex-site)
@end lisp
in their @file{.emacs} files if they want to use AUC @TeX{}.  If you use
a modern emacs, you can do this for them by inserting the above line in
the @file{.../emacs/site-lisp/site-start.el} file.

To extract information from your sites @TeX{} macros, type @kbd{M-x
TeX-auto-generate-global} in your emacs.  This will only work if you
have set @code{TeX-macro-global} correctly in @file{tex-site.el}.
