$Id: INTRO,v 5.12 1992-03-18 17:34:27 krab Exp $

Introduction
============

This document gives a brief overview of what AUC-TeX is. It is *not*
an attempt to document it. Real documentation for AUC-TeX may be
available in TeX-Info format any time now.


AUC-TeX for GNU Emacs
=====================

AUC-TeX is a comprehensive customizable integrated environment for
writing input files for LaTeX using GNU Emacs.

AUC-TeX lets you run TeX/LaTeX and other LaTeX-related tools, such as
a output filters or post processor from inside Emacs.  Especially
`running LaTeX' is interesting, as AUC-TeX let's you browse through
the errors TeX reported, while it moves the cursor directly to the
reported error, and displays some documentation for that particular
error.  This will even work when the document is spread over several
files.

AUC-TeX automatically indents your `LaTeX-source', not only as you
write it---you can also let it indent and format an entire document.
It has a special outline feature, which can greatly help you `getting
the overview' of a document.

Apart from these special features, AUC-TeX provides an large range of
handy Emacs macros, which in several different ways can help you
write your LaTeX documents fast and painless.

All features of AUC-TeX are documented using the GNU Emacs online
documentation system.  That is, documentation for any command is just
a key click away!

AUC-TeX is written entirely in Emacs-Lisp, and hence you can easily
add new features for your own needs.  It was not made as part of any
particular employment or project (apart from the AUC-TeX project
itself).  AUC-TeX is distributed under the `GNU Emacs General Public
License' and may therefore almost freely be copied and redistributed.


Major features of AUC-TeX
=========================

This section is a short introduction to some `actual' features.  For
further information, refer to the build-in online documentation of
AUC-TeX. 

*Indentation and formatting*

AUC-TeX may automatically indent your document as you write it. By
pressing line feed instead of return at the end of a line, the current
line is indented by two spaces according to the current environment
level, and the cursor is moved down one line.  By pressing TAB, the
current line is indented, and the cursor stays where it is.  The
well-known Emacs feature format-paragraph (M-q) is re implemented
especially for AUC-TeX to follow the indentation.  A special command
LaTeX-format-buffer, lets you indent an entire document like the
well-known c utility indent (this time, only according to the LaTeX
structure :-)

*Completion*

By studying your `\documentstyle' command (in the top of your
document), and consulting a precompiled list of (La)TeX symbols from a
large number of TeX and LaTeX files, AUC-TeX is aware of the LaTeX
commands you should able to use in this particular document.  This
`knowledge' of AUC-TeX is used for two purposes: 1) To make you able
to `complete' partly written LaTeX commands. You may e.g. write
"\renew" and press ESC TAB (TeX-complete-symbol), and then AUC-TeX
will complete the word "\renewcommand" for you. In case of ambigiouty
it will display a list of possible completions. 2) To aid you
inserting environments, that is \begin - \end pairs. This is done by
pressing C-c C-c (LaTeX-environment), and you will be prompted for
which `environment' to insert.

*Editing your document*

A number of more or less intelligent keyboard macros have been defined
to aid you editing your document.  The most important are listed here
below.

LaTeX-environment (C-c C-c) 
	Insert a \begin{} - \end{} pair as described above.

LaTeX-section (C-c C-x)
	Insert one of \chapter, \section, etc. 

TeX-Roman (C-c C-r), TeX-italic (C-c C-i), TeX-bold (C-c C-b) etc...
	Insert one of {\rm }, {\it \/} {\bf } etc.

A number of additional functions are available.  But - it would be far
too much to write about here.  Refer to the AUC-TeX online
documentation for further information.

*Running LaTeX*

When invoking on of the commands TeX-buffer (C-c C-a) or TeX-region
(C-c C-d) LaTeX is run on either the entire current document or a
given region of it.  The Emacs view is split in two, and the output of
TeX is printed in the second half of the screen, as you may
simultainiously continue editing you document.  In case TeX found any
errors when processing your input you can call the function
TeX-next-error (C-c C-n) which will move the cursor to the first given
error, and display a short explanatory text along with the message TeX
gave.  This procedure may be repeated until all errors have been
displayed.  By pressing C-c C-w (TeX-debug-bad-boxes) you can toggle
whether the browser also should notify over-full/under-full boxes or not.

Once you've successfully formatted your document, you may preview or
print it by invoking TeX-preview (C-c C-p) or TeX-print (C-c !).

*Outlining*

Along with AUC-TeX comes a special `minor' outline mode for Emacs,
which lets you browse the sectioning structure of your document, while
you will still be able to use the full power of the rest of the
AUC-TeX functionality.  


Credits
=======

Thanks should also go to all the people who have been a great help
developing the AUC-TeX system.  Especially all the people on the
auc-tex mailing list, who have been very helpful commenting and
pointing out weak points and errors.

Also a big smile and thanks should go to all the folks who cheered me
up, during the long hours of programming... sorry folks, but I cant
help including the list below, of comments I've got...

/Kresten Krab Thorup


I'd like to say that I'm very much enjoying using auc-tex.
Thanks for the great package!
-- monheit@psych.stanford.edu

I really enjoy working with auc-tex.
-- georgiou@rex.cs.tulane.edu

Thanks for you great package.  It's indispensable now!
Thanks!
-- toy@soho.crd.ge.com

Thanks for your time and for what appears to be a great and useful
package.
Thanks again
-- ascott@gara.une.oz.au

Thanks for providing auc-tex. 
-- hal@alfred.econ.lsa.umich.edu

I really enjoy using the new emacs TeX-mode you wrote. I think you did
a great job.
-- simons@ibiza.karlsruhe.gmd.de

I am having fun with auc-tex already.
-- clipper@csd.uwo.ca

Thanks for your work on auc-tex, especially the math-minor mode.
-- ibekhaus@athena.mit.edu

I like your auc-tex elisp package for writing LaTeX files -- I am
especially impressed by the help with error correction.
-- burt@dfki.uni-kl.de

Thanks so much!
-- goncal@cnmvax.uab.es

I >really< like the macro, particularly the hooks for previewing and
the error parsing!
-- bond@sce.carleton.ca

All in all I am pleased with your package. Thanks a lot.
-- ascott@gara.une.oz.au

