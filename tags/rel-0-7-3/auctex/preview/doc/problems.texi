@include macros.texi
@ifset rawfile
@chapter Known problems

@end ifset
@c -----------------------
@c @cindex @kbd{M-x preview-report-bug @key{RET}}
@c @cindex @code{preview-report-bug}
@c @cindex Report a bug
A number of issues are known concerning the interoperation with various
other software. Some of the known problems can be solved by moving to
newer versions of the problematic software or by simple patches.

@ifclear rawfile
@menu
* Problems with GhostScript::   
* Font problems with Dvips::    
* Emacs problems::              
* AUC TeX prior to 11.0::       
* Too small bounding boxes::    
* LaTeX international characters::  
* x-symbol interoperation::     
* Middle-clicks paste instead of toggling::  
@end menu
@end ifclear

If you find something not mentioned here, please send a bug report using
@kbd{M-x preview-report-bug @key{RET}}, which will fill in a lot of
information interesting to us.  Some bugs are being fixed as you read
this, there is a mailing list for developers, look at
@uref{http://lists.sourceforge.net/lists/listinfo/preview-latex-devel}.
For more information on the mailing list, send a message with just the
word ``help'' as subject or body to
@email{preview-latex-devel-request@@lists.sourceforge.net}. Questions,
suggestions for new features, and pleas for help should go to
@email{preview-latex-devel@@lists.sourceforge.net} (the @previewlatex{}
devel team).

@node Problems with GhostScript, Font problems with Dvips, , Known problems
@section Problems with GhostScript

Most of the problems encountered come from interaction with GhostScript.
It is a good idea to have a fairly recent version of GhostScript
installed.  

When GhostScript fails, the necessary information and messages from
Ghostscript go somewhere.  If GhostScript fails before starting to
process images, you'll find the information at the end of the process
buffer you can see with @kbd{C-c C-l}.  If GhostScript fails while
processing a particular image, this image will be tagged with clickable
buttons for the error description and for the corresponding source file.

@strong{Important note:} GNU GhostScript 6.53 and 7.05 (and possibly
later) has a security bug which can seriously affect preview-latex.
Rather than fail, preview-latex disables security for the involved known
versions exhibiting this bug.  If you have any doubts concerning the
source of included PostScript code, rather install a recent version of
AFPL GhostScript (v7.04 is known to work).  If a newer version of GNU
GhostScript has been released since this has been written, you can try
that out too: if the bug persists, one out of two previews will fail.
In that case, you will need to customize the variable
@code{preview-gs-broken-security}
@vindex preview-gs-broken-security
in order to tell @previewlatex{} to keep ignoring security for GNU
GhostScript versions later than 7.05 as well.

The default options configurable with

@display
@kbd{M-x customize-variable @key{RET} preview-gs-options @key{RET}}
@end display
@vindex preview-gs-options
@noindent
include the options @option{-dTextAlphaBits=4} and
@option{-dGraphicsAlphaBits=4}.  These options have been reported to
make GhostScript 5.50 fail, but should work under GhostScript 6.51 and
later.  If you are experiencing problems, it might help to customize
them away.  Of course, this also takes away the joy of antialiasing, so
upgrading GhostScript might not be the worst idea after all.

The device names have changed over time, so when using an old
GhostScript, you may have problems with the devices demanded by the
customizable variable @code{preview-image-creators}.
@vindex preview-image-creators
In that case, make sure they fit your version of GhostScript, at least
the entry corresponding to the current value of
@code{preview-image-type}.
@vindex preview-image-type
While not being best in file size and image quality, setting
@code{preview-image-creators} to @code{jpeg} should probably be one of
the best bets for the purpose of checking basic operation, since that
device name has not changed in quite some time.  But @acronym{JPEG} is
not intended for text, but for photographic images.  On a more
permanent time scale, the best choice is to use @acronym{PNG} and
complain to your suppliers if either Emacs or GhostScript fail to
properly accommodate this format.

@node Font problems with Dvips, Emacs problems, Problems with GhostScript, Known problems
@section Font problems with Dvips
Some fonts have been reported to produce wrong characters with
@previewlatex{}.  @previewlatex{} calls Dvips by default with the option
@option{-Pwww} in order to get scalable fonts for nice results.  If you
are using antialiasing, however, the results might be sufficiently nice
with bitmapped fonts, anyway.  You might try @option{-Ppdf} for another
stab at scalable fonts, or other printer definitions.  Use

@display
@kbd{M-x customize-variable @key{RET} preview-fast-dvips-command @key{RET}}
@end display
@noindent
and
@display
@kbd{M-x customize-variable @key{RET} preview-dvips-command @key{RET}}
@end display
@noindent
in order to customize this.

One particular problem is that several printer setup files (typically in
a file called @file{/usr/share/texmf/dvips/config/config.pdf} if you are
using the @option{-Ppdf} switch) contain the @option{G} option for
`character shifting'.  This option will result in @samp{fi} being
rendered as @samp{@pounds{}} (British Pounds sign) in several fonts,
unless your version of Dvips has a long-standing bug in its
implementation fixed (only very recent versions of Dvips have).

@node Emacs problems, AUC TeX prior to 11.0, Font problems with Dvips, Known problems
@section Emacs problems

@itemize @bullet
@item GNU Emacs versions prior to 21.1

Don't use them.  20.x will not work, 21.0.x were prereleases, anyway.

@item GNU Emacs under Windows operating systems

As of GNU Emacs 21.2, no image support is available in Emacs under
Windows.  Without images, @previewlatex{} is useless.  The current
@acronym{CVS} version of Emacs available from
@uref{http://savannah.gnu.org/projects/emacs} now is supposed to
support images, so it is likely that @w{Emacs 21.4} will have a
reasonable chance of working once it is out. However, as of this
writing, no support for the @code{png} image format seems to be
available in GNU Emacs for Windows. In this case, you can try using
the @code{pnm} image format, but we recommend that you get an Emacs
version that supports @code{png} images (and if none is available we
recommend that you complain to your Emacs deliverer).  If it is
important to you and you have the necessary technical skills, support
the Emacs developer crew by checking out the current version and
trying to get @previewlatex{} to run on it.  Reasonable patches
necessary to make @previewlatex{} work under Windows will gladly be
accepted.  Another option for Windows users might be to try XEmacs
(see below).

@item XEmacs

XEmacs support should now work.

There is are two current problems known with the XEmacs core.  One leads
to seriously mispositioned baselines and previews hanging far above
other text on the same line.  An alpha-quality patch against
XEmacs-21.4.6 to fix this is available from
@uref{http://list-archive.xemacs.org/xemacs-patches/200204/msg00129.html}.
This patch in included in XEmacs-21.4.9, but won't be present in any
earlier version, with one exception: the MS Windows port had
incorporated these fixes a few version numbers earlier.

The other core bug causes a huge delay when XEmacs's idea of the state of
processes (like ghostscript) is wrong, and can lead to nasty spurious
error messages.  It should be fixed in version 21.4.8.

Previews will only remain from one session to the next if you have
version 1.81 or above of the @file{edit-utils} package, first released
in the 2002-03-12 sumo tarball.

By now we have had success reports of both Cygwin XEmacs and the native
Windows ports (one Cygwin user reported that he had to disable
@code{balloon-help-mode} in @code{preview-mode-setup} in the file
@file{prv-xemacs.el}, please report back your experiences).  If you are
lacking the usual infrastructure for the installation process of
@previewlatex{}, things will become more complicated.

See
@ifset rawfile
the file @file{INSTALL.windows}
@end ifset
@ifclear rawfile
@ref{Installation under MS Windows}
@end ifclear
for an installation report for this platform.
@end itemize

@node AUC TeX prior to 11.0, Too small bounding boxes, Emacs problems, Known problems
@section @AUCTeX{} prior to 11.0

@AUCTeX{} versions up to and including 10.0g have a bug in the
calculation of the offsets for the start of a region.  This affects
@kbd{C-c C-r} commands where the start of the region does not lie on the
start of a line.  It also affects regeneration of single previews.  To
correct this, apply the patch in @file{patches/auctex-10.patch}.  It
might be more prudent to install a more recent version of @AUCTeX{},
however.

@node Too small bounding boxes, LaTeX international characters, AUC TeX prior to 11.0, Known problems
@section Too small bounding boxes
The bounding box of a preview is determined by the @LaTeX{} package
using the pure @TeX{} bounding boxes.  If there is material extending
outside of the @TeX{} box, that material will be missing from the
preview image. For example this happens for the label-showing boxes from
the @code{showkeys} package (which has its own variant in
@previewlatex{}). Should this happen to you, try setting
@code{preview-fast-conversion} to `Off' 
@ifset rawfile
(see the manual).
@end ifset
@ifclear rawfile
(@pxref{The Emacs interface}).
@end ifclear
The conversion will take slightly more time, but instead
use the bounding boxes from the @acronym{EPS} files generated by Dvips.

Dvips generally does not miss things, but it does not understand
PostScript constructs like @code{\resizebox} or @code{\rotate} commands,
so will generate rather wrong boxes for those.  Dvips can be helped with
the @code{psfixbb} package option to preview 
@ifset rawfile
(see the manual),
@end ifset
@ifclear rawfile
(@pxref{The LaTeX style file}),
@end ifclear
which will tag the corners of the included @TeX{} box.  This will mostly
be convenient for @emph{pure} PostScript stuff like that created by
PStricks, which Dvips would otherwise reserve no space for.

@node LaTeX international characters, x-symbol interoperation, Too small bounding boxes, Known problems
@section @LaTeX{} international characters

To determine the position of a preview, @previewlatex{} correlates
error messages from @TeX{} with the input text.  The delivered example
file @file{circ.tex} contains @samp{ISO-8859-1} input characters (also
called @samp{Latin-1}).  If your language environment is not properly
set up, or your @TeX{} version is rather old, @TeX{} will, for
example, display @samp{@"u} (German u-Umlaut) as @samp{^^fc}.  In that
case the correlation will fail, with the result that the preview
images get misplaced.  Personally, I have set the environment variable
@env{LANG} to the string @code{en_US.ISO8859-1}.  Your system may have
different ways of achieving something similar.  If you have a
graphical login screen, chances are that it offers a @samp{Language}
setting.  It may help to choose @samp{US English} or similar instead
of the plain @samp{English} setting.  This problem has also been
reported as being caused by te@TeX{} compiled against @samp{libc5}
libraries.

@code{configure} currently tries checking for an 8-bit-clean
configuration of @LaTeX{} and refuses to continue until you have fixed
it.  If nothing else works and you would not need to have an 8-bit
clean installation, pass the option @code{--disable-8bit-test} to
configure.  This will usually result in @file{circ.tex} and other files
with 8-bit characters not being properly previewed.

As a very last resort, when all of the regular attempts of getting your
system recognized as being able to deal with 8-bit characters by the
@code{latex} executable fail, you might try to use @kbd{M-x
customize-variable} on the variable @code{LaTeX-command-style} and
replace the command @code{latex} with @code{latex
-translate-file=cp8bit}.

@node x-symbol interoperation, Middle-clicks paste instead of toggling, LaTeX international characters, Known problems
@section x-symbol interoperation

Thanks to the work of Christoph Wedler, starting with version
@samp{4.0h/beta} of x-symbol, the line parsing of @AUCTeX{} and
@previewlatex{} is fully supported.  Earlier versions exhibit problems.
However, versions before 4.2.2 will cause a drastic slowdown of
@previewlatex{}'s parsing pass, so we don't recommend to use versions
earlier than that.

If you wonder what x-symbol is, it is a package that transforms various
tokens and subscripts to a more readable form while editing and offers a
few input methods handy especially for dealing with math. Take a look at
@uref{http://x-symbol.sourceforge.net}.

@node Middle-clicks paste instead of toggling,  , x-symbol interoperation, Known problems
@section Middle-clicks paste instead of toggling

This is probably the fault of your favorite package.  In Emacs-21.1, the
following culprits are known; Emacs-21.2 inherits those bugs, as of
21.3, they will be fixed.  The patches have been thoroughly tested and
applying them is hardly likely to cause any adverse effect.

@itemize @bullet
@item flyspell.el

Apply the patch in @file{patches/flyspell.patch}.

@item mouse-drag.el

Apply the patch in @file{patches/mouse-drag.patch}.

@item isearch.el

This is one complicated mess to dig through.  Better just end the search
with @kbd{@key{RET}} before toggling and resume with @kbd{C-s C-s} or
similar afterwards.  Since previews over the current match will
auto-open, anyway, this should not be much of a problem.

@end itemize
